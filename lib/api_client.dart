//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//
// @dart=2.12

// ignore_for_file: unused_element, unused_import
// ignore_for_file: always_put_required_named_parameters_first
// ignore_for_file: constant_identifier_names
// ignore_for_file: lines_longer_than_80_chars

part of openapi.api;

class ApiClient {
  ApiClient({this.basePath = 'https://connect.squareup.com', this.authentication,});

  final String basePath;
  final Authentication? authentication;

  var _client = Client();
  final _defaultHeaderMap = <String, String>{};

  /// Returns the current HTTP [Client] instance to use in this class.
  ///
  /// The return value is guaranteed to never be null.
  Client get client => _client;

  /// Requests to use a new HTTP [Client] in this class.
  set client(Client newClient) {
    _client = newClient;
  }

  Map<String, String> get defaultHeaderMap => _defaultHeaderMap;

  void addDefaultHeader(String key, String value) {
     _defaultHeaderMap[key] = value;
  }

  // We don't use a Map<String, String> for queryParams.
  // If collectionFormat is 'multi', a key might appear multiple times.
  Future<Response> invokeAPI(
    String path,
    String method,
    List<QueryParam> queryParams,
    Object? body,
    Map<String, String> headerParams,
    Map<String, String> formParams,
    String? contentType,
  ) async {
    await authentication?.applyToParams(queryParams, headerParams);

    headerParams.addAll(_defaultHeaderMap);
    if (contentType != null) {
      headerParams['Content-Type'] = contentType;
    }

    final urlEncodedQueryParams = queryParams.map((param) => '$param');
    final queryString = urlEncodedQueryParams.isNotEmpty ? '?${urlEncodedQueryParams.join('&')}' : '';
    final uri = Uri.parse('$basePath$path$queryString');

    try {
      // Special case for uploading a single file which isn't a 'multipart/form-data'.
      if (
        body is MultipartFile && (contentType == null ||
        !contentType.toLowerCase().startsWith('multipart/form-data'))
      ) {
        final request = StreamedRequest(method, uri);
        request.headers.addAll(headerParams);
        request.contentLength = body.length;
        body.finalize().listen(
          request.sink.add,
          onDone: request.sink.close,
          // ignore: avoid_types_on_closure_parameters
          onError: (Object error, StackTrace trace) => request.sink.close(),
          cancelOnError: true,
        );
        final response = await _client.send(request);
        return Response.fromStream(response);
      }

      if (body is MultipartRequest) {
        final request = MultipartRequest(method, uri);
        request.fields.addAll(body.fields);
        request.files.addAll(body.files);
        request.headers.addAll(body.headers);
        request.headers.addAll(headerParams);
        final response = await _client.send(request);
        return Response.fromStream(response);
      }

      final msgBody = contentType == 'application/x-www-form-urlencoded'
        ? formParams
        : await serializeAsync(body);
      final nullableHeaderParams = headerParams.isEmpty ? null : headerParams;

      switch(method) {
        case 'POST': return await _client.post(uri, headers: nullableHeaderParams, body: msgBody,);
        case 'PUT': return await _client.put(uri, headers: nullableHeaderParams, body: msgBody,);
        case 'DELETE': return await _client.delete(uri, headers: nullableHeaderParams, body: msgBody,);
        case 'PATCH': return await _client.patch(uri, headers: nullableHeaderParams, body: msgBody,);
        case 'HEAD': return await _client.head(uri, headers: nullableHeaderParams,);
        case 'GET': return await _client.get(uri, headers: nullableHeaderParams,);
      }
    } on SocketException catch (error, trace) {
      throw ApiException.withInner(
        HttpStatus.badRequest,
        'Socket operation failed: $method $path',
        error,
        trace,
      );
    } on TlsException catch (error, trace) {
      throw ApiException.withInner(
        HttpStatus.badRequest,
        'TLS/SSL communication failed: $method $path',
        error,
        trace,
      );
    } on IOException catch (error, trace) {
      throw ApiException.withInner(
        HttpStatus.badRequest,
        'I/O operation failed: $method $path',
        error,
        trace,
      );
    } on ClientException catch (error, trace) {
      throw ApiException.withInner(
        HttpStatus.badRequest,
        'HTTP connection failed: $method $path',
        error,
        trace,
      );
    } on Exception catch (error, trace) {
      throw ApiException.withInner(
        HttpStatus.badRequest,
        'Exception occurred: $method $path',
        error,
        trace,
      );
    }

    throw ApiException(
      HttpStatus.badRequest,
      'Invalid HTTP operation: $method $path',
    );
  }

  Future<dynamic> deserializeAsync(String value, String targetType, {bool growable = false,}) async =>
    // ignore: deprecated_member_use_from_same_package
    deserialize(value, targetType, growable: growable);

  @Deprecated('Scheduled for removal in OpenAPI Generator 6.x. Use deserializeAsync() instead.')
  dynamic deserialize(String value, String targetType, {bool growable = false,}) {
    // Remove all spaces. Necessary for regular expressions as well.
    targetType = targetType.replaceAll(' ', ''); // ignore: parameter_assignments

    // If the expected target type is String, nothing to do...
    return targetType == 'String'
      ? value
      : fromJson(json.decode(value), targetType, growable: growable);
  }

  // ignore: deprecated_member_use_from_same_package
  Future<String> serializeAsync(Object? value) async => serialize(value);

  @Deprecated('Scheduled for removal in OpenAPI Generator 6.x. Use serializeAsync() instead.')
  String serialize(Object? value) => value == null ? '' : json.encode(value);

  /// Returns a native instance of an OpenAPI class matching the [specified type][targetType].
  static dynamic fromJson(dynamic value, String targetType, {bool growable = false,}) {
    try {
      switch (targetType) {
        case 'String':
          return value is String ? value : value.toString();
        case 'int':
          return value is int ? value : int.parse('$value');
        case 'double':
          return value is double ? value : double.parse('$value');
        case 'bool':
          if (value is bool) {
            return value;
          }
          final valueString = '$value'.toLowerCase();
          return valueString == 'true' || valueString == '1';
        case 'DateTime':
          return value is DateTime ? value : DateTime.tryParse(value);
        case 'ACHDetails':
          return ACHDetails.fromJson(value);
        case 'AcceptDisputeResponse':
          return AcceptDisputeResponse.fromJson(value);
        case 'AcceptedPaymentMethods':
          return AcceptedPaymentMethods.fromJson(value);
        case 'AccumulateLoyaltyPointsRequest':
          return AccumulateLoyaltyPointsRequest.fromJson(value);
        case 'AccumulateLoyaltyPointsResponse':
          return AccumulateLoyaltyPointsResponse.fromJson(value);
        case 'ActionCancelReason':
          return ActionCancelReasonTypeTransformer().decode(value);
        case 'ActivityType':
          return ActivityTypeTypeTransformer().decode(value);
        case 'AddGroupToCustomerResponse':
          return AddGroupToCustomerResponse.fromJson(value);
        case 'AdditionalRecipient':
          return AdditionalRecipient.fromJson(value);
        case 'Address':
          return Address.fromJson(value);
        case 'AdjustLoyaltyPointsRequest':
          return AdjustLoyaltyPointsRequest.fromJson(value);
        case 'AdjustLoyaltyPointsResponse':
          return AdjustLoyaltyPointsResponse.fromJson(value);
        case 'AfterpayDetails':
          return AfterpayDetails.fromJson(value);
        case 'ApplicationDetails':
          return ApplicationDetails.fromJson(value);
        case 'ApplicationDetailsExternalSquareProduct':
          return ApplicationDetailsExternalSquareProductTypeTransformer().decode(value);
        case 'ApplicationType':
          return ApplicationTypeTypeTransformer().decode(value);
        case 'AppointmentSegment':
          return AppointmentSegment.fromJson(value);
        case 'ArchivedState':
          return ArchivedStateTypeTransformer().decode(value);
        case 'Availability':
          return Availability.fromJson(value);
        case 'BankAccount':
          return BankAccount.fromJson(value);
        case 'BankAccountPaymentDetails':
          return BankAccountPaymentDetails.fromJson(value);
        case 'BankAccountStatus':
          return BankAccountStatusTypeTransformer().decode(value);
        case 'BankAccountType':
          return BankAccountTypeTypeTransformer().decode(value);
        case 'BatchChangeInventoryRequest':
          return BatchChangeInventoryRequest.fromJson(value);
        case 'BatchChangeInventoryResponse':
          return BatchChangeInventoryResponse.fromJson(value);
        case 'BatchDeleteCatalogObjectsRequest':
          return BatchDeleteCatalogObjectsRequest.fromJson(value);
        case 'BatchDeleteCatalogObjectsResponse':
          return BatchDeleteCatalogObjectsResponse.fromJson(value);
        case 'BatchRetrieveCatalogObjectsRequest':
          return BatchRetrieveCatalogObjectsRequest.fromJson(value);
        case 'BatchRetrieveCatalogObjectsResponse':
          return BatchRetrieveCatalogObjectsResponse.fromJson(value);
        case 'BatchRetrieveInventoryChangesRequest':
          return BatchRetrieveInventoryChangesRequest.fromJson(value);
        case 'BatchRetrieveInventoryChangesResponse':
          return BatchRetrieveInventoryChangesResponse.fromJson(value);
        case 'BatchRetrieveInventoryCountsRequest':
          return BatchRetrieveInventoryCountsRequest.fromJson(value);
        case 'BatchRetrieveInventoryCountsResponse':
          return BatchRetrieveInventoryCountsResponse.fromJson(value);
        case 'BatchRetrieveOrdersRequest':
          return BatchRetrieveOrdersRequest.fromJson(value);
        case 'BatchRetrieveOrdersResponse':
          return BatchRetrieveOrdersResponse.fromJson(value);
        case 'BatchUpsertCatalogObjectsRequest':
          return BatchUpsertCatalogObjectsRequest.fromJson(value);
        case 'BatchUpsertCatalogObjectsResponse':
          return BatchUpsertCatalogObjectsResponse.fromJson(value);
        case 'Booking':
          return Booking.fromJson(value);
        case 'BookingBookingSource':
          return BookingBookingSourceTypeTransformer().decode(value);
        case 'BookingCreatorDetails':
          return BookingCreatorDetails.fromJson(value);
        case 'BookingCreatorDetailsCreatorType':
          return BookingCreatorDetailsCreatorTypeTypeTransformer().decode(value);
        case 'BookingCustomAttributeDeleteRequest':
          return BookingCustomAttributeDeleteRequest.fromJson(value);
        case 'BookingCustomAttributeDeleteResponse':
          return BookingCustomAttributeDeleteResponse.fromJson(value);
        case 'BookingCustomAttributeUpsertRequest':
          return BookingCustomAttributeUpsertRequest.fromJson(value);
        case 'BookingCustomAttributeUpsertResponse':
          return BookingCustomAttributeUpsertResponse.fromJson(value);
        case 'BookingStatus':
          return BookingStatusTypeTransformer().decode(value);
        case 'BreakType':
          return BreakType.fromJson(value);
        case 'BulkCreateTeamMembersRequest':
          return BulkCreateTeamMembersRequest.fromJson(value);
        case 'BulkCreateTeamMembersResponse':
          return BulkCreateTeamMembersResponse.fromJson(value);
        case 'BulkCreateVendorsRequest':
          return BulkCreateVendorsRequest.fromJson(value);
        case 'BulkCreateVendorsResponse':
          return BulkCreateVendorsResponse.fromJson(value);
        case 'BulkDeleteBookingCustomAttributesRequest':
          return BulkDeleteBookingCustomAttributesRequest.fromJson(value);
        case 'BulkDeleteBookingCustomAttributesResponse':
          return BulkDeleteBookingCustomAttributesResponse.fromJson(value);
        case 'BulkDeleteLocationCustomAttributesRequest':
          return BulkDeleteLocationCustomAttributesRequest.fromJson(value);
        case 'BulkDeleteLocationCustomAttributesRequestLocationCustomAttributeDeleteRequest':
          return BulkDeleteLocationCustomAttributesRequestLocationCustomAttributeDeleteRequest.fromJson(value);
        case 'BulkDeleteLocationCustomAttributesResponse':
          return BulkDeleteLocationCustomAttributesResponse.fromJson(value);
        case 'BulkDeleteLocationCustomAttributesResponseLocationCustomAttributeDeleteResponse':
          return BulkDeleteLocationCustomAttributesResponseLocationCustomAttributeDeleteResponse.fromJson(value);
        case 'BulkDeleteMerchantCustomAttributesRequest':
          return BulkDeleteMerchantCustomAttributesRequest.fromJson(value);
        case 'BulkDeleteMerchantCustomAttributesRequestMerchantCustomAttributeDeleteRequest':
          return BulkDeleteMerchantCustomAttributesRequestMerchantCustomAttributeDeleteRequest.fromJson(value);
        case 'BulkDeleteMerchantCustomAttributesResponse':
          return BulkDeleteMerchantCustomAttributesResponse.fromJson(value);
        case 'BulkDeleteMerchantCustomAttributesResponseMerchantCustomAttributeDeleteResponse':
          return BulkDeleteMerchantCustomAttributesResponseMerchantCustomAttributeDeleteResponse.fromJson(value);
        case 'BulkDeleteOrderCustomAttributesRequest':
          return BulkDeleteOrderCustomAttributesRequest.fromJson(value);
        case 'BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute':
          return BulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute.fromJson(value);
        case 'BulkDeleteOrderCustomAttributesResponse':
          return BulkDeleteOrderCustomAttributesResponse.fromJson(value);
        case 'BulkRetrieveBookingsRequest':
          return BulkRetrieveBookingsRequest.fromJson(value);
        case 'BulkRetrieveBookingsResponse':
          return BulkRetrieveBookingsResponse.fromJson(value);
        case 'BulkRetrieveTeamMemberBookingProfilesRequest':
          return BulkRetrieveTeamMemberBookingProfilesRequest.fromJson(value);
        case 'BulkRetrieveTeamMemberBookingProfilesResponse':
          return BulkRetrieveTeamMemberBookingProfilesResponse.fromJson(value);
        case 'BulkRetrieveVendorsRequest':
          return BulkRetrieveVendorsRequest.fromJson(value);
        case 'BulkRetrieveVendorsResponse':
          return BulkRetrieveVendorsResponse.fromJson(value);
        case 'BulkSwapPlanRequest':
          return BulkSwapPlanRequest.fromJson(value);
        case 'BulkSwapPlanResponse':
          return BulkSwapPlanResponse.fromJson(value);
        case 'BulkUpdateTeamMembersRequest':
          return BulkUpdateTeamMembersRequest.fromJson(value);
        case 'BulkUpdateTeamMembersResponse':
          return BulkUpdateTeamMembersResponse.fromJson(value);
        case 'BulkUpdateVendorsRequest':
          return BulkUpdateVendorsRequest.fromJson(value);
        case 'BulkUpdateVendorsResponse':
          return BulkUpdateVendorsResponse.fromJson(value);
        case 'BulkUpsertBookingCustomAttributesRequest':
          return BulkUpsertBookingCustomAttributesRequest.fromJson(value);
        case 'BulkUpsertBookingCustomAttributesResponse':
          return BulkUpsertBookingCustomAttributesResponse.fromJson(value);
        case 'BulkUpsertCustomerCustomAttributesRequest':
          return BulkUpsertCustomerCustomAttributesRequest.fromJson(value);
        case 'BulkUpsertCustomerCustomAttributesRequestCustomerCustomAttributeUpsertRequest':
          return BulkUpsertCustomerCustomAttributesRequestCustomerCustomAttributeUpsertRequest.fromJson(value);
        case 'BulkUpsertCustomerCustomAttributesResponse':
          return BulkUpsertCustomerCustomAttributesResponse.fromJson(value);
        case 'BulkUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponse':
          return BulkUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponse.fromJson(value);
        case 'BulkUpsertLocationCustomAttributesRequest':
          return BulkUpsertLocationCustomAttributesRequest.fromJson(value);
        case 'BulkUpsertLocationCustomAttributesRequestLocationCustomAttributeUpsertRequest':
          return BulkUpsertLocationCustomAttributesRequestLocationCustomAttributeUpsertRequest.fromJson(value);
        case 'BulkUpsertLocationCustomAttributesResponse':
          return BulkUpsertLocationCustomAttributesResponse.fromJson(value);
        case 'BulkUpsertLocationCustomAttributesResponseLocationCustomAttributeUpsertResponse':
          return BulkUpsertLocationCustomAttributesResponseLocationCustomAttributeUpsertResponse.fromJson(value);
        case 'BulkUpsertMerchantCustomAttributesRequest':
          return BulkUpsertMerchantCustomAttributesRequest.fromJson(value);
        case 'BulkUpsertMerchantCustomAttributesRequestMerchantCustomAttributeUpsertRequest':
          return BulkUpsertMerchantCustomAttributesRequestMerchantCustomAttributeUpsertRequest.fromJson(value);
        case 'BulkUpsertMerchantCustomAttributesResponse':
          return BulkUpsertMerchantCustomAttributesResponse.fromJson(value);
        case 'BulkUpsertMerchantCustomAttributesResponseMerchantCustomAttributeUpsertResponse':
          return BulkUpsertMerchantCustomAttributesResponseMerchantCustomAttributeUpsertResponse.fromJson(value);
        case 'BulkUpsertOrderCustomAttributesRequest':
          return BulkUpsertOrderCustomAttributesRequest.fromJson(value);
        case 'BulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute':
          return BulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute.fromJson(value);
        case 'BulkUpsertOrderCustomAttributesResponse':
          return BulkUpsertOrderCustomAttributesResponse.fromJson(value);
        case 'BusinessAppointmentSettings':
          return BusinessAppointmentSettings.fromJson(value);
        case 'BusinessAppointmentSettingsAlignmentTime':
          return BusinessAppointmentSettingsAlignmentTimeTypeTransformer().decode(value);
        case 'BusinessAppointmentSettingsBookingLocationType':
          return BusinessAppointmentSettingsBookingLocationTypeTypeTransformer().decode(value);
        case 'BusinessAppointmentSettingsCancellationPolicy':
          return BusinessAppointmentSettingsCancellationPolicyTypeTransformer().decode(value);
        case 'BusinessAppointmentSettingsMaxAppointmentsPerDayLimitType':
          return BusinessAppointmentSettingsMaxAppointmentsPerDayLimitTypeTypeTransformer().decode(value);
        case 'BusinessBookingProfile':
          return BusinessBookingProfile.fromJson(value);
        case 'BusinessBookingProfileBookingPolicy':
          return BusinessBookingProfileBookingPolicyTypeTransformer().decode(value);
        case 'BusinessBookingProfileCustomerTimezoneChoice':
          return BusinessBookingProfileCustomerTimezoneChoiceTypeTransformer().decode(value);
        case 'BusinessHours':
          return BusinessHours.fromJson(value);
        case 'BusinessHoursPeriod':
          return BusinessHoursPeriod.fromJson(value);
        case 'BuyNowPayLaterDetails':
          return BuyNowPayLaterDetails.fromJson(value);
        case 'CalculateLoyaltyPointsRequest':
          return CalculateLoyaltyPointsRequest.fromJson(value);
        case 'CalculateLoyaltyPointsResponse':
          return CalculateLoyaltyPointsResponse.fromJson(value);
        case 'CalculateOrderRequest':
          return CalculateOrderRequest.fromJson(value);
        case 'CalculateOrderResponse':
          return CalculateOrderResponse.fromJson(value);
        case 'CancelBookingRequest':
          return CancelBookingRequest.fromJson(value);
        case 'CancelBookingResponse':
          return CancelBookingResponse.fromJson(value);
        case 'CancelInvoiceRequest':
          return CancelInvoiceRequest.fromJson(value);
        case 'CancelInvoiceResponse':
          return CancelInvoiceResponse.fromJson(value);
        case 'CancelLoyaltyPromotionResponse':
          return CancelLoyaltyPromotionResponse.fromJson(value);
        case 'CancelPaymentByIdempotencyKeyRequest':
          return CancelPaymentByIdempotencyKeyRequest.fromJson(value);
        case 'CancelPaymentByIdempotencyKeyResponse':
          return CancelPaymentByIdempotencyKeyResponse.fromJson(value);
        case 'CancelPaymentResponse':
          return CancelPaymentResponse.fromJson(value);
        case 'CancelSubscriptionResponse':
          return CancelSubscriptionResponse.fromJson(value);
        case 'CancelTerminalActionResponse':
          return CancelTerminalActionResponse.fromJson(value);
        case 'CancelTerminalCheckoutResponse':
          return CancelTerminalCheckoutResponse.fromJson(value);
        case 'CancelTerminalRefundResponse':
          return CancelTerminalRefundResponse.fromJson(value);
        case 'CaptureTransactionResponse':
          return CaptureTransactionResponse.fromJson(value);
        case 'Card':
          return Card.fromJson(value);
        case 'CardBrand':
          return CardBrandTypeTransformer().decode(value);
        case 'CardCoBrand':
          return CardCoBrandTypeTransformer().decode(value);
        case 'CardPaymentDetails':
          return CardPaymentDetails.fromJson(value);
        case 'CardPaymentTimeline':
          return CardPaymentTimeline.fromJson(value);
        case 'CardPrepaidType':
          return CardPrepaidTypeTypeTransformer().decode(value);
        case 'CardType':
          return CardTypeTypeTransformer().decode(value);
        case 'CashAppDetails':
          return CashAppDetails.fromJson(value);
        case 'CashDrawerDevice':
          return CashDrawerDevice.fromJson(value);
        case 'CashDrawerEventType':
          return CashDrawerEventTypeTypeTransformer().decode(value);
        case 'CashDrawerShift':
          return CashDrawerShift.fromJson(value);
        case 'CashDrawerShiftEvent':
          return CashDrawerShiftEvent.fromJson(value);
        case 'CashDrawerShiftState':
          return CashDrawerShiftStateTypeTransformer().decode(value);
        case 'CashDrawerShiftSummary':
          return CashDrawerShiftSummary.fromJson(value);
        case 'CashPaymentDetails':
          return CashPaymentDetails.fromJson(value);
        case 'CatalogAvailabilityPeriod':
          return CatalogAvailabilityPeriod.fromJson(value);
        case 'CatalogCategory':
          return CatalogCategory.fromJson(value);
        case 'CatalogCategoryType':
          return CatalogCategoryTypeTypeTransformer().decode(value);
        case 'CatalogCustomAttributeDefinition':
          return CatalogCustomAttributeDefinition.fromJson(value);
        case 'CatalogCustomAttributeDefinitionAppVisibility':
          return CatalogCustomAttributeDefinitionAppVisibilityTypeTransformer().decode(value);
        case 'CatalogCustomAttributeDefinitionNumberConfig':
          return CatalogCustomAttributeDefinitionNumberConfig.fromJson(value);
        case 'CatalogCustomAttributeDefinitionSelectionConfig':
          return CatalogCustomAttributeDefinitionSelectionConfig.fromJson(value);
        case 'CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection':
          return CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.fromJson(value);
        case 'CatalogCustomAttributeDefinitionSellerVisibility':
          return CatalogCustomAttributeDefinitionSellerVisibilityTypeTransformer().decode(value);
        case 'CatalogCustomAttributeDefinitionStringConfig':
          return CatalogCustomAttributeDefinitionStringConfig.fromJson(value);
        case 'CatalogCustomAttributeDefinitionType':
          return CatalogCustomAttributeDefinitionTypeTypeTransformer().decode(value);
        case 'CatalogCustomAttributeValue':
          return CatalogCustomAttributeValue.fromJson(value);
        case 'CatalogDiscount':
          return CatalogDiscount.fromJson(value);
        case 'CatalogDiscountModifyTaxBasis':
          return CatalogDiscountModifyTaxBasisTypeTransformer().decode(value);
        case 'CatalogDiscountType':
          return CatalogDiscountTypeTypeTransformer().decode(value);
        case 'CatalogEcomSeoData':
          return CatalogEcomSeoData.fromJson(value);
        case 'CatalogIdMapping':
          return CatalogIdMapping.fromJson(value);
        case 'CatalogImage':
          return CatalogImage.fromJson(value);
        case 'CatalogInfoResponse':
          return CatalogInfoResponse.fromJson(value);
        case 'CatalogInfoResponseLimits':
          return CatalogInfoResponseLimits.fromJson(value);
        case 'CatalogItem':
          return CatalogItem.fromJson(value);
        case 'CatalogItemModifierListInfo':
          return CatalogItemModifierListInfo.fromJson(value);
        case 'CatalogItemOption':
          return CatalogItemOption.fromJson(value);
        case 'CatalogItemOptionForItem':
          return CatalogItemOptionForItem.fromJson(value);
        case 'CatalogItemOptionValue':
          return CatalogItemOptionValue.fromJson(value);
        case 'CatalogItemOptionValueForItemVariation':
          return CatalogItemOptionValueForItemVariation.fromJson(value);
        case 'CatalogItemProductType':
          return CatalogItemProductTypeTypeTransformer().decode(value);
        case 'CatalogItemVariation':
          return CatalogItemVariation.fromJson(value);
        case 'CatalogMeasurementUnit':
          return CatalogMeasurementUnit.fromJson(value);
        case 'CatalogModifier':
          return CatalogModifier.fromJson(value);
        case 'CatalogModifierList':
          return CatalogModifierList.fromJson(value);
        case 'CatalogModifierListSelectionType':
          return CatalogModifierListSelectionTypeTypeTransformer().decode(value);
        case 'CatalogModifierOverride':
          return CatalogModifierOverride.fromJson(value);
        case 'CatalogObject':
          return CatalogObject.fromJson(value);
        case 'CatalogObjectBatch':
          return CatalogObjectBatch.fromJson(value);
        case 'CatalogObjectCategory':
          return CatalogObjectCategory.fromJson(value);
        case 'CatalogObjectReference':
          return CatalogObjectReference.fromJson(value);
        case 'CatalogObjectType':
          return CatalogObjectTypeTypeTransformer().decode(value);
        case 'CatalogPricingRule':
          return CatalogPricingRule.fromJson(value);
        case 'CatalogPricingType':
          return CatalogPricingTypeTypeTransformer().decode(value);
        case 'CatalogProductSet':
          return CatalogProductSet.fromJson(value);
        case 'CatalogQuery':
          return CatalogQuery.fromJson(value);
        case 'CatalogQueryExact':
          return CatalogQueryExact.fromJson(value);
        case 'CatalogQueryItemVariationsForItemOptionValues':
          return CatalogQueryItemVariationsForItemOptionValues.fromJson(value);
        case 'CatalogQueryItemsForItemOptions':
          return CatalogQueryItemsForItemOptions.fromJson(value);
        case 'CatalogQueryItemsForModifierList':
          return CatalogQueryItemsForModifierList.fromJson(value);
        case 'CatalogQueryItemsForTax':
          return CatalogQueryItemsForTax.fromJson(value);
        case 'CatalogQueryPrefix':
          return CatalogQueryPrefix.fromJson(value);
        case 'CatalogQueryRange':
          return CatalogQueryRange.fromJson(value);
        case 'CatalogQuerySet':
          return CatalogQuerySet.fromJson(value);
        case 'CatalogQuerySortedAttribute':
          return CatalogQuerySortedAttribute.fromJson(value);
        case 'CatalogQueryText':
          return CatalogQueryText.fromJson(value);
        case 'CatalogQuickAmount':
          return CatalogQuickAmount.fromJson(value);
        case 'CatalogQuickAmountType':
          return CatalogQuickAmountTypeTypeTransformer().decode(value);
        case 'CatalogQuickAmountsSettings':
          return CatalogQuickAmountsSettings.fromJson(value);
        case 'CatalogQuickAmountsSettingsOption':
          return CatalogQuickAmountsSettingsOptionTypeTransformer().decode(value);
        case 'CatalogStockConversion':
          return CatalogStockConversion.fromJson(value);
        case 'CatalogSubscriptionPlan':
          return CatalogSubscriptionPlan.fromJson(value);
        case 'CatalogSubscriptionPlanVariation':
          return CatalogSubscriptionPlanVariation.fromJson(value);
        case 'CatalogTax':
          return CatalogTax.fromJson(value);
        case 'CatalogTimePeriod':
          return CatalogTimePeriod.fromJson(value);
        case 'CatalogV1Id':
          return CatalogV1Id.fromJson(value);
        case 'CategoryPathToRootNode':
          return CategoryPathToRootNode.fromJson(value);
        case 'ChangeBillingAnchorDateRequest':
          return ChangeBillingAnchorDateRequest.fromJson(value);
        case 'ChangeBillingAnchorDateResponse':
          return ChangeBillingAnchorDateResponse.fromJson(value);
        case 'ChangeTiming':
          return ChangeTimingTypeTransformer().decode(value);
        case 'ChargeRequest':
          return ChargeRequest.fromJson(value);
        case 'ChargeRequestAdditionalRecipient':
          return ChargeRequestAdditionalRecipient.fromJson(value);
        case 'ChargeResponse':
          return ChargeResponse.fromJson(value);
        case 'Checkout':
          return Checkout.fromJson(value);
        case 'CheckoutLocationSettings':
          return CheckoutLocationSettings.fromJson(value);
        case 'CheckoutLocationSettingsBranding':
          return CheckoutLocationSettingsBranding.fromJson(value);
        case 'CheckoutLocationSettingsBrandingButtonShape':
          return CheckoutLocationSettingsBrandingButtonShapeTypeTransformer().decode(value);
        case 'CheckoutLocationSettingsBrandingHeaderType':
          return CheckoutLocationSettingsBrandingHeaderTypeTypeTransformer().decode(value);
        case 'CheckoutLocationSettingsCoupons':
          return CheckoutLocationSettingsCoupons.fromJson(value);
        case 'CheckoutLocationSettingsPolicy':
          return CheckoutLocationSettingsPolicy.fromJson(value);
        case 'CheckoutLocationSettingsTipping':
          return CheckoutLocationSettingsTipping.fromJson(value);
        case 'CheckoutMerchantSettings':
          return CheckoutMerchantSettings.fromJson(value);
        case 'CheckoutMerchantSettingsPaymentMethods':
          return CheckoutMerchantSettingsPaymentMethods.fromJson(value);
        case 'CheckoutMerchantSettingsPaymentMethodsAfterpayClearpay':
          return CheckoutMerchantSettingsPaymentMethodsAfterpayClearpay.fromJson(value);
        case 'CheckoutMerchantSettingsPaymentMethodsAfterpayClearpayEligibilityRange':
          return CheckoutMerchantSettingsPaymentMethodsAfterpayClearpayEligibilityRange.fromJson(value);
        case 'CheckoutMerchantSettingsPaymentMethodsPaymentMethod':
          return CheckoutMerchantSettingsPaymentMethodsPaymentMethod.fromJson(value);
        case 'CheckoutOptions':
          return CheckoutOptions.fromJson(value);
        case 'CheckoutOptionsPaymentType':
          return CheckoutOptionsPaymentTypeTypeTransformer().decode(value);
        case 'ClearpayDetails':
          return ClearpayDetails.fromJson(value);
        case 'CloneOrderRequest':
          return CloneOrderRequest.fromJson(value);
        case 'CloneOrderResponse':
          return CloneOrderResponse.fromJson(value);
        case 'CollectedData':
          return CollectedData.fromJson(value);
        case 'CompletePaymentRequest':
          return CompletePaymentRequest.fromJson(value);
        case 'CompletePaymentResponse':
          return CompletePaymentResponse.fromJson(value);
        case 'Component':
          return Component.fromJson(value);
        case 'ComponentComponentType':
          return ComponentComponentTypeTypeTransformer().decode(value);
        case 'ConfirmationDecision':
          return ConfirmationDecision.fromJson(value);
        case 'ConfirmationOptions':
          return ConfirmationOptions.fromJson(value);
        case 'Coordinates':
          return Coordinates.fromJson(value);
        case 'Country':
          return CountryTypeTransformer().decode(value);
        case 'CreateBookingCustomAttributeDefinitionRequest':
          return CreateBookingCustomAttributeDefinitionRequest.fromJson(value);
        case 'CreateBookingCustomAttributeDefinitionResponse':
          return CreateBookingCustomAttributeDefinitionResponse.fromJson(value);
        case 'CreateBookingRequest':
          return CreateBookingRequest.fromJson(value);
        case 'CreateBookingResponse':
          return CreateBookingResponse.fromJson(value);
        case 'CreateBreakTypeRequest':
          return CreateBreakTypeRequest.fromJson(value);
        case 'CreateBreakTypeResponse':
          return CreateBreakTypeResponse.fromJson(value);
        case 'CreateCardRequest':
          return CreateCardRequest.fromJson(value);
        case 'CreateCardResponse':
          return CreateCardResponse.fromJson(value);
        case 'CreateCheckoutRequest':
          return CreateCheckoutRequest.fromJson(value);
        case 'CreateCheckoutResponse':
          return CreateCheckoutResponse.fromJson(value);
        case 'CreateCustomerCardRequest':
          return CreateCustomerCardRequest.fromJson(value);
        case 'CreateCustomerCardResponse':
          return CreateCustomerCardResponse.fromJson(value);
        case 'CreateCustomerCustomAttributeDefinitionRequest':
          return CreateCustomerCustomAttributeDefinitionRequest.fromJson(value);
        case 'CreateCustomerCustomAttributeDefinitionResponse':
          return CreateCustomerCustomAttributeDefinitionResponse.fromJson(value);
        case 'CreateCustomerGroupRequest':
          return CreateCustomerGroupRequest.fromJson(value);
        case 'CreateCustomerGroupResponse':
          return CreateCustomerGroupResponse.fromJson(value);
        case 'CreateCustomerRequest':
          return CreateCustomerRequest.fromJson(value);
        case 'CreateCustomerResponse':
          return CreateCustomerResponse.fromJson(value);
        case 'CreateDeviceCodeRequest':
          return CreateDeviceCodeRequest.fromJson(value);
        case 'CreateDeviceCodeResponse':
          return CreateDeviceCodeResponse.fromJson(value);
        case 'CreateDisputeEvidenceTextRequest':
          return CreateDisputeEvidenceTextRequest.fromJson(value);
        case 'CreateDisputeEvidenceTextResponse':
          return CreateDisputeEvidenceTextResponse.fromJson(value);
        case 'CreateGiftCardActivityRequest':
          return CreateGiftCardActivityRequest.fromJson(value);
        case 'CreateGiftCardActivityResponse':
          return CreateGiftCardActivityResponse.fromJson(value);
        case 'CreateGiftCardRequest':
          return CreateGiftCardRequest.fromJson(value);
        case 'CreateGiftCardResponse':
          return CreateGiftCardResponse.fromJson(value);
        case 'CreateInvoiceRequest':
          return CreateInvoiceRequest.fromJson(value);
        case 'CreateInvoiceResponse':
          return CreateInvoiceResponse.fromJson(value);
        case 'CreateLocationCustomAttributeDefinitionRequest':
          return CreateLocationCustomAttributeDefinitionRequest.fromJson(value);
        case 'CreateLocationCustomAttributeDefinitionResponse':
          return CreateLocationCustomAttributeDefinitionResponse.fromJson(value);
        case 'CreateLocationRequest':
          return CreateLocationRequest.fromJson(value);
        case 'CreateLocationResponse':
          return CreateLocationResponse.fromJson(value);
        case 'CreateLoyaltyAccountRequest':
          return CreateLoyaltyAccountRequest.fromJson(value);
        case 'CreateLoyaltyAccountResponse':
          return CreateLoyaltyAccountResponse.fromJson(value);
        case 'CreateLoyaltyPromotionRequest':
          return CreateLoyaltyPromotionRequest.fromJson(value);
        case 'CreateLoyaltyPromotionResponse':
          return CreateLoyaltyPromotionResponse.fromJson(value);
        case 'CreateLoyaltyRewardRequest':
          return CreateLoyaltyRewardRequest.fromJson(value);
        case 'CreateLoyaltyRewardResponse':
          return CreateLoyaltyRewardResponse.fromJson(value);
        case 'CreateMerchantCustomAttributeDefinitionRequest':
          return CreateMerchantCustomAttributeDefinitionRequest.fromJson(value);
        case 'CreateMerchantCustomAttributeDefinitionResponse':
          return CreateMerchantCustomAttributeDefinitionResponse.fromJson(value);
        case 'CreateMobileAuthorizationCodeRequest':
          return CreateMobileAuthorizationCodeRequest.fromJson(value);
        case 'CreateMobileAuthorizationCodeResponse':
          return CreateMobileAuthorizationCodeResponse.fromJson(value);
        case 'CreateOrderCustomAttributeDefinitionRequest':
          return CreateOrderCustomAttributeDefinitionRequest.fromJson(value);
        case 'CreateOrderCustomAttributeDefinitionResponse':
          return CreateOrderCustomAttributeDefinitionResponse.fromJson(value);
        case 'CreateOrderRequest':
          return CreateOrderRequest.fromJson(value);
        case 'CreateOrderResponse':
          return CreateOrderResponse.fromJson(value);
        case 'CreatePaymentLinkRequest':
          return CreatePaymentLinkRequest.fromJson(value);
        case 'CreatePaymentLinkResponse':
          return CreatePaymentLinkResponse.fromJson(value);
        case 'CreatePaymentRequest':
          return CreatePaymentRequest.fromJson(value);
        case 'CreatePaymentResponse':
          return CreatePaymentResponse.fromJson(value);
        case 'CreateRefundRequest':
          return CreateRefundRequest.fromJson(value);
        case 'CreateRefundResponse':
          return CreateRefundResponse.fromJson(value);
        case 'CreateShiftRequest':
          return CreateShiftRequest.fromJson(value);
        case 'CreateShiftResponse':
          return CreateShiftResponse.fromJson(value);
        case 'CreateSubscriptionRequest':
          return CreateSubscriptionRequest.fromJson(value);
        case 'CreateSubscriptionResponse':
          return CreateSubscriptionResponse.fromJson(value);
        case 'CreateTeamMemberRequest':
          return CreateTeamMemberRequest.fromJson(value);
        case 'CreateTeamMemberResponse':
          return CreateTeamMemberResponse.fromJson(value);
        case 'CreateTerminalActionRequest':
          return CreateTerminalActionRequest.fromJson(value);
        case 'CreateTerminalActionResponse':
          return CreateTerminalActionResponse.fromJson(value);
        case 'CreateTerminalCheckoutRequest':
          return CreateTerminalCheckoutRequest.fromJson(value);
        case 'CreateTerminalCheckoutResponse':
          return CreateTerminalCheckoutResponse.fromJson(value);
        case 'CreateTerminalRefundRequest':
          return CreateTerminalRefundRequest.fromJson(value);
        case 'CreateTerminalRefundResponse':
          return CreateTerminalRefundResponse.fromJson(value);
        case 'CreateVendorRequest':
          return CreateVendorRequest.fromJson(value);
        case 'CreateVendorResponse':
          return CreateVendorResponse.fromJson(value);
        case 'CreateWebhookSubscriptionRequest':
          return CreateWebhookSubscriptionRequest.fromJson(value);
        case 'CreateWebhookSubscriptionResponse':
          return CreateWebhookSubscriptionResponse.fromJson(value);
        case 'Currency':
          return CurrencyTypeTransformer().decode(value);
        case 'CustomAttribute':
          return CustomAttribute.fromJson(value);
        case 'CustomAttributeDefinition':
          return CustomAttributeDefinition.fromJson(value);
        case 'CustomAttributeDefinitionVisibility':
          return CustomAttributeDefinitionVisibilityTypeTransformer().decode(value);
        case 'CustomAttributeFilter':
          return CustomAttributeFilter.fromJson(value);
        case 'CustomField':
          return CustomField.fromJson(value);
        case 'Customer':
          return Customer.fromJson(value);
        case 'CustomerAddressFilter':
          return CustomerAddressFilter.fromJson(value);
        case 'CustomerCreationSource':
          return CustomerCreationSourceTypeTransformer().decode(value);
        case 'CustomerCreationSourceFilter':
          return CustomerCreationSourceFilter.fromJson(value);
        case 'CustomerCustomAttributeFilter':
          return CustomerCustomAttributeFilter.fromJson(value);
        case 'CustomerCustomAttributeFilterValue':
          return CustomerCustomAttributeFilterValue.fromJson(value);
        case 'CustomerCustomAttributeFilters':
          return CustomerCustomAttributeFilters.fromJson(value);
        case 'CustomerDetails':
          return CustomerDetails.fromJson(value);
        case 'CustomerFilter':
          return CustomerFilter.fromJson(value);
        case 'CustomerGroup':
          return CustomerGroup.fromJson(value);
        case 'CustomerInclusionExclusion':
          return CustomerInclusionExclusionTypeTransformer().decode(value);
        case 'CustomerPreferences':
          return CustomerPreferences.fromJson(value);
        case 'CustomerQuery':
          return CustomerQuery.fromJson(value);
        case 'CustomerSegment':
          return CustomerSegment.fromJson(value);
        case 'CustomerSort':
          return CustomerSort.fromJson(value);
        case 'CustomerSortField':
          return CustomerSortFieldTypeTransformer().decode(value);
        case 'CustomerTaxIds':
          return CustomerTaxIds.fromJson(value);
        case 'CustomerTextFilter':
          return CustomerTextFilter.fromJson(value);
        case 'DataCollectionOptions':
          return DataCollectionOptions.fromJson(value);
        case 'DataCollectionOptionsInputType':
          return DataCollectionOptionsInputTypeTypeTransformer().decode(value);
        case 'DateRange':
          return DateRange.fromJson(value);
        case 'DayOfWeek':
          return DayOfWeekTypeTransformer().decode(value);
        case 'DeleteBookingCustomAttributeDefinitionResponse':
          return DeleteBookingCustomAttributeDefinitionResponse.fromJson(value);
        case 'DeleteBookingCustomAttributeResponse':
          return DeleteBookingCustomAttributeResponse.fromJson(value);
        case 'DeleteBreakTypeResponse':
          return DeleteBreakTypeResponse.fromJson(value);
        case 'DeleteCatalogObjectResponse':
          return DeleteCatalogObjectResponse.fromJson(value);
        case 'DeleteCustomerCardResponse':
          return DeleteCustomerCardResponse.fromJson(value);
        case 'DeleteCustomerCustomAttributeDefinitionResponse':
          return DeleteCustomerCustomAttributeDefinitionResponse.fromJson(value);
        case 'DeleteCustomerCustomAttributeResponse':
          return DeleteCustomerCustomAttributeResponse.fromJson(value);
        case 'DeleteCustomerGroupResponse':
          return DeleteCustomerGroupResponse.fromJson(value);
        case 'DeleteCustomerRequest':
          return DeleteCustomerRequest.fromJson(value);
        case 'DeleteCustomerResponse':
          return DeleteCustomerResponse.fromJson(value);
        case 'DeleteDisputeEvidenceResponse':
          return DeleteDisputeEvidenceResponse.fromJson(value);
        case 'DeleteInvoiceRequest':
          return DeleteInvoiceRequest.fromJson(value);
        case 'DeleteInvoiceResponse':
          return DeleteInvoiceResponse.fromJson(value);
        case 'DeleteLocationCustomAttributeDefinitionResponse':
          return DeleteLocationCustomAttributeDefinitionResponse.fromJson(value);
        case 'DeleteLocationCustomAttributeResponse':
          return DeleteLocationCustomAttributeResponse.fromJson(value);
        case 'DeleteLoyaltyRewardResponse':
          return DeleteLoyaltyRewardResponse.fromJson(value);
        case 'DeleteMerchantCustomAttributeDefinitionResponse':
          return DeleteMerchantCustomAttributeDefinitionResponse.fromJson(value);
        case 'DeleteMerchantCustomAttributeResponse':
          return DeleteMerchantCustomAttributeResponse.fromJson(value);
        case 'DeleteOrderCustomAttributeDefinitionResponse':
          return DeleteOrderCustomAttributeDefinitionResponse.fromJson(value);
        case 'DeleteOrderCustomAttributeResponse':
          return DeleteOrderCustomAttributeResponse.fromJson(value);
        case 'DeletePaymentLinkResponse':
          return DeletePaymentLinkResponse.fromJson(value);
        case 'DeleteShiftResponse':
          return DeleteShiftResponse.fromJson(value);
        case 'DeleteSnippetResponse':
          return DeleteSnippetResponse.fromJson(value);
        case 'DeleteSubscriptionActionResponse':
          return DeleteSubscriptionActionResponse.fromJson(value);
        case 'DeleteWebhookSubscriptionResponse':
          return DeleteWebhookSubscriptionResponse.fromJson(value);
        case 'DeprecatedCreateDisputeEvidenceFileRequest':
          return DeprecatedCreateDisputeEvidenceFileRequest.fromJson(value);
        case 'DeprecatedCreateDisputeEvidenceFileResponse':
          return DeprecatedCreateDisputeEvidenceFileResponse.fromJson(value);
        case 'DeprecatedCreateDisputeEvidenceTextRequest':
          return DeprecatedCreateDisputeEvidenceTextRequest.fromJson(value);
        case 'DeprecatedCreateDisputeEvidenceTextResponse':
          return DeprecatedCreateDisputeEvidenceTextResponse.fromJson(value);
        case 'Destination':
          return Destination.fromJson(value);
        case 'DestinationDetails':
          return DestinationDetails.fromJson(value);
        case 'DestinationDetailsCardRefundDetails':
          return DestinationDetailsCardRefundDetails.fromJson(value);
        case 'DestinationType':
          return DestinationTypeTypeTransformer().decode(value);
        case 'Device':
          return Device.fromJson(value);
        case 'DeviceAttributes':
          return DeviceAttributes.fromJson(value);
        case 'DeviceAttributesDeviceType':
          return DeviceAttributesDeviceTypeTypeTransformer().decode(value);
        case 'DeviceCheckoutOptions':
          return DeviceCheckoutOptions.fromJson(value);
        case 'DeviceCode':
          return DeviceCode.fromJson(value);
        case 'DeviceCodeStatus':
          return DeviceCodeStatusTypeTransformer().decode(value);
        case 'DeviceComponentDetailsApplicationDetails':
          return DeviceComponentDetailsApplicationDetails.fromJson(value);
        case 'DeviceComponentDetailsBatteryDetails':
          return DeviceComponentDetailsBatteryDetails.fromJson(value);
        case 'DeviceComponentDetailsCardReaderDetails':
          return DeviceComponentDetailsCardReaderDetails.fromJson(value);
        case 'DeviceComponentDetailsEthernetDetails':
          return DeviceComponentDetailsEthernetDetails.fromJson(value);
        case 'DeviceComponentDetailsExternalPower':
          return DeviceComponentDetailsExternalPowerTypeTransformer().decode(value);
        case 'DeviceComponentDetailsMeasurement':
          return DeviceComponentDetailsMeasurement.fromJson(value);
        case 'DeviceComponentDetailsNetworkInterfaceDetails':
          return DeviceComponentDetailsNetworkInterfaceDetails.fromJson(value);
        case 'DeviceComponentDetailsWiFiDetails':
          return DeviceComponentDetailsWiFiDetails.fromJson(value);
        case 'DeviceDetails':
          return DeviceDetails.fromJson(value);
        case 'DeviceMetadata':
          return DeviceMetadata.fromJson(value);
        case 'DeviceStatus':
          return DeviceStatus.fromJson(value);
        case 'DeviceStatusCategory':
          return DeviceStatusCategoryTypeTransformer().decode(value);
        case 'DigitalWalletDetails':
          return DigitalWalletDetails.fromJson(value);
        case 'DisableCardResponse':
          return DisableCardResponse.fromJson(value);
        case 'DismissTerminalActionResponse':
          return DismissTerminalActionResponse.fromJson(value);
        case 'DismissTerminalCheckoutResponse':
          return DismissTerminalCheckoutResponse.fromJson(value);
        case 'DismissTerminalRefundResponse':
          return DismissTerminalRefundResponse.fromJson(value);
        case 'Dispute':
          return Dispute.fromJson(value);
        case 'DisputeEvidence':
          return DisputeEvidence.fromJson(value);
        case 'DisputeEvidenceFile':
          return DisputeEvidenceFile.fromJson(value);
        case 'DisputeEvidenceType':
          return DisputeEvidenceTypeTypeTransformer().decode(value);
        case 'DisputeReason':
          return DisputeReasonTypeTransformer().decode(value);
        case 'DisputeState':
          return DisputeStateTypeTransformer().decode(value);
        case 'DisputedPayment':
          return DisputedPayment.fromJson(value);
        case 'EcomVisibility':
          return EcomVisibilityTypeTransformer().decode(value);
        case 'Employee':
          return Employee.fromJson(value);
        case 'EmployeeStatus':
          return EmployeeStatusTypeTransformer().decode(value);
        case 'EmployeeWage':
          return EmployeeWage.fromJson(value);
        case 'Error':
          return Error.fromJson(value);
        case 'ErrorCategory':
          return ErrorCategoryTypeTransformer().decode(value);
        case 'ErrorCode':
          return ErrorCodeTypeTransformer().decode(value);
        case 'Event':
          return Event.fromJson(value);
        case 'EventData':
          return EventData.fromJson(value);
        case 'EventTypeMetadata':
          return EventTypeMetadata.fromJson(value);
        case 'ExcludeStrategy':
          return ExcludeStrategyTypeTransformer().decode(value);
        case 'ExternalPaymentDetails':
          return ExternalPaymentDetails.fromJson(value);
        case 'FilterValue':
          return FilterValue.fromJson(value);
        case 'FloatNumberRange':
          return FloatNumberRange.fromJson(value);
        case 'Fulfillment':
          return Fulfillment.fromJson(value);
        case 'FulfillmentDeliveryDetails':
          return FulfillmentDeliveryDetails.fromJson(value);
        case 'FulfillmentDeliveryDetailsOrderFulfillmentDeliveryDetailsScheduleType':
          return FulfillmentDeliveryDetailsOrderFulfillmentDeliveryDetailsScheduleTypeTypeTransformer().decode(value);
        case 'FulfillmentFulfillmentEntry':
          return FulfillmentFulfillmentEntry.fromJson(value);
        case 'FulfillmentFulfillmentLineItemApplication':
          return FulfillmentFulfillmentLineItemApplicationTypeTransformer().decode(value);
        case 'FulfillmentPickupDetails':
          return FulfillmentPickupDetails.fromJson(value);
        case 'FulfillmentPickupDetailsCurbsidePickupDetails':
          return FulfillmentPickupDetailsCurbsidePickupDetails.fromJson(value);
        case 'FulfillmentPickupDetailsScheduleType':
          return FulfillmentPickupDetailsScheduleTypeTypeTransformer().decode(value);
        case 'FulfillmentRecipient':
          return FulfillmentRecipient.fromJson(value);
        case 'FulfillmentShipmentDetails':
          return FulfillmentShipmentDetails.fromJson(value);
        case 'FulfillmentState':
          return FulfillmentStateTypeTransformer().decode(value);
        case 'FulfillmentType':
          return FulfillmentTypeTypeTransformer().decode(value);
        case 'GetBankAccountByV1IdResponse':
          return GetBankAccountByV1IdResponse.fromJson(value);
        case 'GetBankAccountResponse':
          return GetBankAccountResponse.fromJson(value);
        case 'GetBreakTypeResponse':
          return GetBreakTypeResponse.fromJson(value);
        case 'GetDeviceCodeResponse':
          return GetDeviceCodeResponse.fromJson(value);
        case 'GetDeviceResponse':
          return GetDeviceResponse.fromJson(value);
        case 'GetEmployeeWageResponse':
          return GetEmployeeWageResponse.fromJson(value);
        case 'GetInvoiceResponse':
          return GetInvoiceResponse.fromJson(value);
        case 'GetPaymentRefundResponse':
          return GetPaymentRefundResponse.fromJson(value);
        case 'GetPaymentResponse':
          return GetPaymentResponse.fromJson(value);
        case 'GetPayoutResponse':
          return GetPayoutResponse.fromJson(value);
        case 'GetShiftResponse':
          return GetShiftResponse.fromJson(value);
        case 'GetTeamMemberWageResponse':
          return GetTeamMemberWageResponse.fromJson(value);
        case 'GetTerminalActionResponse':
          return GetTerminalActionResponse.fromJson(value);
        case 'GetTerminalCheckoutResponse':
          return GetTerminalCheckoutResponse.fromJson(value);
        case 'GetTerminalRefundResponse':
          return GetTerminalRefundResponse.fromJson(value);
        case 'GiftCard':
          return GiftCard.fromJson(value);
        case 'GiftCardActivity':
          return GiftCardActivity.fromJson(value);
        case 'GiftCardActivityActivate':
          return GiftCardActivityActivate.fromJson(value);
        case 'GiftCardActivityAdjustDecrement':
          return GiftCardActivityAdjustDecrement.fromJson(value);
        case 'GiftCardActivityAdjustDecrementReason':
          return GiftCardActivityAdjustDecrementReasonTypeTransformer().decode(value);
        case 'GiftCardActivityAdjustIncrement':
          return GiftCardActivityAdjustIncrement.fromJson(value);
        case 'GiftCardActivityAdjustIncrementReason':
          return GiftCardActivityAdjustIncrementReasonTypeTransformer().decode(value);
        case 'GiftCardActivityBlock':
          return GiftCardActivityBlock.fromJson(value);
        case 'GiftCardActivityBlockReason':
          return GiftCardActivityBlockReasonTypeTransformer().decode(value);
        case 'GiftCardActivityClearBalance':
          return GiftCardActivityClearBalance.fromJson(value);
        case 'GiftCardActivityClearBalanceReason':
          return GiftCardActivityClearBalanceReasonTypeTransformer().decode(value);
        case 'GiftCardActivityDeactivate':
          return GiftCardActivityDeactivate.fromJson(value);
        case 'GiftCardActivityDeactivateReason':
          return GiftCardActivityDeactivateReasonTypeTransformer().decode(value);
        case 'GiftCardActivityImport':
          return GiftCardActivityImport.fromJson(value);
        case 'GiftCardActivityImportReversal':
          return GiftCardActivityImportReversal.fromJson(value);
        case 'GiftCardActivityLoad':
          return GiftCardActivityLoad.fromJson(value);
        case 'GiftCardActivityRedeem':
          return GiftCardActivityRedeem.fromJson(value);
        case 'GiftCardActivityRedeemStatus':
          return GiftCardActivityRedeemStatusTypeTransformer().decode(value);
        case 'GiftCardActivityRefund':
          return GiftCardActivityRefund.fromJson(value);
        case 'GiftCardActivityTransferBalanceFrom':
          return GiftCardActivityTransferBalanceFrom.fromJson(value);
        case 'GiftCardActivityTransferBalanceTo':
          return GiftCardActivityTransferBalanceTo.fromJson(value);
        case 'GiftCardActivityType':
          return GiftCardActivityTypeTypeTransformer().decode(value);
        case 'GiftCardActivityUnblock':
          return GiftCardActivityUnblock.fromJson(value);
        case 'GiftCardActivityUnblockReason':
          return GiftCardActivityUnblockReasonTypeTransformer().decode(value);
        case 'GiftCardActivityUnlinkedActivityRefund':
          return GiftCardActivityUnlinkedActivityRefund.fromJson(value);
        case 'GiftCardGANSource':
          return GiftCardGANSourceTypeTransformer().decode(value);
        case 'GiftCardStatus':
          return GiftCardStatusTypeTransformer().decode(value);
        case 'GiftCardType':
          return GiftCardTypeTypeTransformer().decode(value);
        case 'InventoryAdjustment':
          return InventoryAdjustment.fromJson(value);
        case 'InventoryAdjustmentGroup':
          return InventoryAdjustmentGroup.fromJson(value);
        case 'InventoryAlertType':
          return InventoryAlertTypeTypeTransformer().decode(value);
        case 'InventoryChange':
          return InventoryChange.fromJson(value);
        case 'InventoryChangeType':
          return InventoryChangeTypeTypeTransformer().decode(value);
        case 'InventoryCount':
          return InventoryCount.fromJson(value);
        case 'InventoryPhysicalCount':
          return InventoryPhysicalCount.fromJson(value);
        case 'InventoryState':
          return InventoryStateTypeTransformer().decode(value);
        case 'InventoryTransfer':
          return InventoryTransfer.fromJson(value);
        case 'Invoice':
          return Invoice.fromJson(value);
        case 'InvoiceAcceptedPaymentMethods':
          return InvoiceAcceptedPaymentMethods.fromJson(value);
        case 'InvoiceAutomaticPaymentSource':
          return InvoiceAutomaticPaymentSourceTypeTransformer().decode(value);
        case 'InvoiceCustomField':
          return InvoiceCustomField.fromJson(value);
        case 'InvoiceCustomFieldPlacement':
          return InvoiceCustomFieldPlacementTypeTransformer().decode(value);
        case 'InvoiceDeliveryMethod':
          return InvoiceDeliveryMethodTypeTransformer().decode(value);
        case 'InvoiceFilter':
          return InvoiceFilter.fromJson(value);
        case 'InvoicePaymentReminder':
          return InvoicePaymentReminder.fromJson(value);
        case 'InvoicePaymentReminderStatus':
          return InvoicePaymentReminderStatusTypeTransformer().decode(value);
        case 'InvoicePaymentRequest':
          return InvoicePaymentRequest.fromJson(value);
        case 'InvoiceQuery':
          return InvoiceQuery.fromJson(value);
        case 'InvoiceRecipient':
          return InvoiceRecipient.fromJson(value);
        case 'InvoiceRecipientTaxIds':
          return InvoiceRecipientTaxIds.fromJson(value);
        case 'InvoiceRequestMethod':
          return InvoiceRequestMethodTypeTransformer().decode(value);
        case 'InvoiceRequestType':
          return InvoiceRequestTypeTypeTransformer().decode(value);
        case 'InvoiceSort':
          return InvoiceSort.fromJson(value);
        case 'InvoiceSortField':
          return InvoiceSortFieldTypeTransformer().decode(value);
        case 'InvoiceStatus':
          return InvoiceStatusTypeTransformer().decode(value);
        case 'ItemVariationLocationOverrides':
          return ItemVariationLocationOverrides.fromJson(value);
        case 'JobAssignment':
          return JobAssignment.fromJson(value);
        case 'JobAssignmentPayType':
          return JobAssignmentPayTypeTypeTransformer().decode(value);
        case 'LinkCustomerToGiftCardRequest':
          return LinkCustomerToGiftCardRequest.fromJson(value);
        case 'LinkCustomerToGiftCardResponse':
          return LinkCustomerToGiftCardResponse.fromJson(value);
        case 'ListBankAccountsRequest':
          return ListBankAccountsRequest.fromJson(value);
        case 'ListBankAccountsResponse':
          return ListBankAccountsResponse.fromJson(value);
        case 'ListBookingCustomAttributeDefinitionsRequest':
          return ListBookingCustomAttributeDefinitionsRequest.fromJson(value);
        case 'ListBookingCustomAttributeDefinitionsResponse':
          return ListBookingCustomAttributeDefinitionsResponse.fromJson(value);
        case 'ListBookingCustomAttributesRequest':
          return ListBookingCustomAttributesRequest.fromJson(value);
        case 'ListBookingCustomAttributesResponse':
          return ListBookingCustomAttributesResponse.fromJson(value);
        case 'ListBookingsRequest':
          return ListBookingsRequest.fromJson(value);
        case 'ListBookingsResponse':
          return ListBookingsResponse.fromJson(value);
        case 'ListBreakTypesRequest':
          return ListBreakTypesRequest.fromJson(value);
        case 'ListBreakTypesResponse':
          return ListBreakTypesResponse.fromJson(value);
        case 'ListCardsRequest':
          return ListCardsRequest.fromJson(value);
        case 'ListCardsResponse':
          return ListCardsResponse.fromJson(value);
        case 'ListCashDrawerShiftEventsRequest':
          return ListCashDrawerShiftEventsRequest.fromJson(value);
        case 'ListCashDrawerShiftEventsResponse':
          return ListCashDrawerShiftEventsResponse.fromJson(value);
        case 'ListCashDrawerShiftsRequest':
          return ListCashDrawerShiftsRequest.fromJson(value);
        case 'ListCashDrawerShiftsResponse':
          return ListCashDrawerShiftsResponse.fromJson(value);
        case 'ListCatalogRequest':
          return ListCatalogRequest.fromJson(value);
        case 'ListCatalogResponse':
          return ListCatalogResponse.fromJson(value);
        case 'ListCustomerCustomAttributeDefinitionsRequest':
          return ListCustomerCustomAttributeDefinitionsRequest.fromJson(value);
        case 'ListCustomerCustomAttributeDefinitionsResponse':
          return ListCustomerCustomAttributeDefinitionsResponse.fromJson(value);
        case 'ListCustomerCustomAttributesRequest':
          return ListCustomerCustomAttributesRequest.fromJson(value);
        case 'ListCustomerCustomAttributesResponse':
          return ListCustomerCustomAttributesResponse.fromJson(value);
        case 'ListCustomerGroupsRequest':
          return ListCustomerGroupsRequest.fromJson(value);
        case 'ListCustomerGroupsResponse':
          return ListCustomerGroupsResponse.fromJson(value);
        case 'ListCustomerSegmentsRequest':
          return ListCustomerSegmentsRequest.fromJson(value);
        case 'ListCustomerSegmentsResponse':
          return ListCustomerSegmentsResponse.fromJson(value);
        case 'ListCustomersRequest':
          return ListCustomersRequest.fromJson(value);
        case 'ListCustomersResponse':
          return ListCustomersResponse.fromJson(value);
        case 'ListDeviceCodesRequest':
          return ListDeviceCodesRequest.fromJson(value);
        case 'ListDeviceCodesResponse':
          return ListDeviceCodesResponse.fromJson(value);
        case 'ListDevicesRequest':
          return ListDevicesRequest.fromJson(value);
        case 'ListDevicesResponse':
          return ListDevicesResponse.fromJson(value);
        case 'ListDisputeEvidenceRequest':
          return ListDisputeEvidenceRequest.fromJson(value);
        case 'ListDisputeEvidenceResponse':
          return ListDisputeEvidenceResponse.fromJson(value);
        case 'ListDisputesRequest':
          return ListDisputesRequest.fromJson(value);
        case 'ListDisputesResponse':
          return ListDisputesResponse.fromJson(value);
        case 'ListEmployeeWagesRequest':
          return ListEmployeeWagesRequest.fromJson(value);
        case 'ListEmployeeWagesResponse':
          return ListEmployeeWagesResponse.fromJson(value);
        case 'ListEmployeesRequest':
          return ListEmployeesRequest.fromJson(value);
        case 'ListEmployeesResponse':
          return ListEmployeesResponse.fromJson(value);
        case 'ListGiftCardActivitiesRequest':
          return ListGiftCardActivitiesRequest.fromJson(value);
        case 'ListGiftCardActivitiesResponse':
          return ListGiftCardActivitiesResponse.fromJson(value);
        case 'ListGiftCardsRequest':
          return ListGiftCardsRequest.fromJson(value);
        case 'ListGiftCardsResponse':
          return ListGiftCardsResponse.fromJson(value);
        case 'ListInvoicesRequest':
          return ListInvoicesRequest.fromJson(value);
        case 'ListInvoicesResponse':
          return ListInvoicesResponse.fromJson(value);
        case 'ListLocationBookingProfilesRequest':
          return ListLocationBookingProfilesRequest.fromJson(value);
        case 'ListLocationBookingProfilesResponse':
          return ListLocationBookingProfilesResponse.fromJson(value);
        case 'ListLocationCustomAttributeDefinitionsRequest':
          return ListLocationCustomAttributeDefinitionsRequest.fromJson(value);
        case 'ListLocationCustomAttributeDefinitionsResponse':
          return ListLocationCustomAttributeDefinitionsResponse.fromJson(value);
        case 'ListLocationCustomAttributesRequest':
          return ListLocationCustomAttributesRequest.fromJson(value);
        case 'ListLocationCustomAttributesResponse':
          return ListLocationCustomAttributesResponse.fromJson(value);
        case 'ListLocationsResponse':
          return ListLocationsResponse.fromJson(value);
        case 'ListLoyaltyProgramsResponse':
          return ListLoyaltyProgramsResponse.fromJson(value);
        case 'ListLoyaltyPromotionsRequest':
          return ListLoyaltyPromotionsRequest.fromJson(value);
        case 'ListLoyaltyPromotionsResponse':
          return ListLoyaltyPromotionsResponse.fromJson(value);
        case 'ListMerchantCustomAttributeDefinitionsRequest':
          return ListMerchantCustomAttributeDefinitionsRequest.fromJson(value);
        case 'ListMerchantCustomAttributeDefinitionsResponse':
          return ListMerchantCustomAttributeDefinitionsResponse.fromJson(value);
        case 'ListMerchantCustomAttributesRequest':
          return ListMerchantCustomAttributesRequest.fromJson(value);
        case 'ListMerchantCustomAttributesResponse':
          return ListMerchantCustomAttributesResponse.fromJson(value);
        case 'ListMerchantsRequest':
          return ListMerchantsRequest.fromJson(value);
        case 'ListMerchantsResponse':
          return ListMerchantsResponse.fromJson(value);
        case 'ListOrderCustomAttributeDefinitionsRequest':
          return ListOrderCustomAttributeDefinitionsRequest.fromJson(value);
        case 'ListOrderCustomAttributeDefinitionsResponse':
          return ListOrderCustomAttributeDefinitionsResponse.fromJson(value);
        case 'ListOrderCustomAttributesRequest':
          return ListOrderCustomAttributesRequest.fromJson(value);
        case 'ListOrderCustomAttributesResponse':
          return ListOrderCustomAttributesResponse.fromJson(value);
        case 'ListPaymentLinksRequest':
          return ListPaymentLinksRequest.fromJson(value);
        case 'ListPaymentLinksResponse':
          return ListPaymentLinksResponse.fromJson(value);
        case 'ListPaymentRefundsRequest':
          return ListPaymentRefundsRequest.fromJson(value);
        case 'ListPaymentRefundsResponse':
          return ListPaymentRefundsResponse.fromJson(value);
        case 'ListPaymentsRequest':
          return ListPaymentsRequest.fromJson(value);
        case 'ListPaymentsResponse':
          return ListPaymentsResponse.fromJson(value);
        case 'ListPayoutEntriesRequest':
          return ListPayoutEntriesRequest.fromJson(value);
        case 'ListPayoutEntriesResponse':
          return ListPayoutEntriesResponse.fromJson(value);
        case 'ListPayoutsRequest':
          return ListPayoutsRequest.fromJson(value);
        case 'ListPayoutsResponse':
          return ListPayoutsResponse.fromJson(value);
        case 'ListRefundsRequest':
          return ListRefundsRequest.fromJson(value);
        case 'ListRefundsResponse':
          return ListRefundsResponse.fromJson(value);
        case 'ListSitesResponse':
          return ListSitesResponse.fromJson(value);
        case 'ListSubscriptionEventsRequest':
          return ListSubscriptionEventsRequest.fromJson(value);
        case 'ListSubscriptionEventsResponse':
          return ListSubscriptionEventsResponse.fromJson(value);
        case 'ListTeamMemberBookingProfilesRequest':
          return ListTeamMemberBookingProfilesRequest.fromJson(value);
        case 'ListTeamMemberBookingProfilesResponse':
          return ListTeamMemberBookingProfilesResponse.fromJson(value);
        case 'ListTeamMemberWagesRequest':
          return ListTeamMemberWagesRequest.fromJson(value);
        case 'ListTeamMemberWagesResponse':
          return ListTeamMemberWagesResponse.fromJson(value);
        case 'ListTransactionsRequest':
          return ListTransactionsRequest.fromJson(value);
        case 'ListTransactionsResponse':
          return ListTransactionsResponse.fromJson(value);
        case 'ListWebhookEventTypesRequest':
          return ListWebhookEventTypesRequest.fromJson(value);
        case 'ListWebhookEventTypesResponse':
          return ListWebhookEventTypesResponse.fromJson(value);
        case 'ListWebhookSubscriptionsRequest':
          return ListWebhookSubscriptionsRequest.fromJson(value);
        case 'ListWebhookSubscriptionsResponse':
          return ListWebhookSubscriptionsResponse.fromJson(value);
        case 'ListWorkweekConfigsRequest':
          return ListWorkweekConfigsRequest.fromJson(value);
        case 'ListWorkweekConfigsResponse':
          return ListWorkweekConfigsResponse.fromJson(value);
        case 'Location':
          return Location.fromJson(value);
        case 'LocationBookingProfile':
          return LocationBookingProfile.fromJson(value);
        case 'LocationCapability':
          return LocationCapabilityTypeTransformer().decode(value);
        case 'LocationStatus':
          return LocationStatusTypeTransformer().decode(value);
        case 'LocationType':
          return LocationTypeTypeTransformer().decode(value);
        case 'LoyaltyAccount':
          return LoyaltyAccount.fromJson(value);
        case 'LoyaltyAccountExpiringPointDeadline':
          return LoyaltyAccountExpiringPointDeadline.fromJson(value);
        case 'LoyaltyAccountMapping':
          return LoyaltyAccountMapping.fromJson(value);
        case 'LoyaltyAccountMappingType':
          return LoyaltyAccountMappingTypeTypeTransformer().decode(value);
        case 'LoyaltyEvent':
          return LoyaltyEvent.fromJson(value);
        case 'LoyaltyEventAccumulatePoints':
          return LoyaltyEventAccumulatePoints.fromJson(value);
        case 'LoyaltyEventAccumulatePromotionPoints':
          return LoyaltyEventAccumulatePromotionPoints.fromJson(value);
        case 'LoyaltyEventAdjustPoints':
          return LoyaltyEventAdjustPoints.fromJson(value);
        case 'LoyaltyEventCreateReward':
          return LoyaltyEventCreateReward.fromJson(value);
        case 'LoyaltyEventDateTimeFilter':
          return LoyaltyEventDateTimeFilter.fromJson(value);
        case 'LoyaltyEventDeleteReward':
          return LoyaltyEventDeleteReward.fromJson(value);
        case 'LoyaltyEventExpirePoints':
          return LoyaltyEventExpirePoints.fromJson(value);
        case 'LoyaltyEventFilter':
          return LoyaltyEventFilter.fromJson(value);
        case 'LoyaltyEventLocationFilter':
          return LoyaltyEventLocationFilter.fromJson(value);
        case 'LoyaltyEventLoyaltyAccountFilter':
          return LoyaltyEventLoyaltyAccountFilter.fromJson(value);
        case 'LoyaltyEventOrderFilter':
          return LoyaltyEventOrderFilter.fromJson(value);
        case 'LoyaltyEventOther':
          return LoyaltyEventOther.fromJson(value);
        case 'LoyaltyEventQuery':
          return LoyaltyEventQuery.fromJson(value);
        case 'LoyaltyEventRedeemReward':
          return LoyaltyEventRedeemReward.fromJson(value);
        case 'LoyaltyEventSource':
          return LoyaltyEventSourceTypeTransformer().decode(value);
        case 'LoyaltyEventType':
          return LoyaltyEventTypeTypeTransformer().decode(value);
        case 'LoyaltyEventTypeFilter':
          return LoyaltyEventTypeFilter.fromJson(value);
        case 'LoyaltyProgram':
          return LoyaltyProgram.fromJson(value);
        case 'LoyaltyProgramAccrualRule':
          return LoyaltyProgramAccrualRule.fromJson(value);
        case 'LoyaltyProgramAccrualRuleCategoryData':
          return LoyaltyProgramAccrualRuleCategoryData.fromJson(value);
        case 'LoyaltyProgramAccrualRuleItemVariationData':
          return LoyaltyProgramAccrualRuleItemVariationData.fromJson(value);
        case 'LoyaltyProgramAccrualRuleSpendData':
          return LoyaltyProgramAccrualRuleSpendData.fromJson(value);
        case 'LoyaltyProgramAccrualRuleTaxMode':
          return LoyaltyProgramAccrualRuleTaxModeTypeTransformer().decode(value);
        case 'LoyaltyProgramAccrualRuleType':
          return LoyaltyProgramAccrualRuleTypeTypeTransformer().decode(value);
        case 'LoyaltyProgramAccrualRuleVisitData':
          return LoyaltyProgramAccrualRuleVisitData.fromJson(value);
        case 'LoyaltyProgramExpirationPolicy':
          return LoyaltyProgramExpirationPolicy.fromJson(value);
        case 'LoyaltyProgramRewardDefinition':
          return LoyaltyProgramRewardDefinition.fromJson(value);
        case 'LoyaltyProgramRewardDefinitionScope':
          return LoyaltyProgramRewardDefinitionScopeTypeTransformer().decode(value);
        case 'LoyaltyProgramRewardDefinitionType':
          return LoyaltyProgramRewardDefinitionTypeTypeTransformer().decode(value);
        case 'LoyaltyProgramRewardTier':
          return LoyaltyProgramRewardTier.fromJson(value);
        case 'LoyaltyProgramStatus':
          return LoyaltyProgramStatusTypeTransformer().decode(value);
        case 'LoyaltyProgramTerminology':
          return LoyaltyProgramTerminology.fromJson(value);
        case 'LoyaltyPromotion':
          return LoyaltyPromotion.fromJson(value);
        case 'LoyaltyPromotionAvailableTimeData':
          return LoyaltyPromotionAvailableTimeData.fromJson(value);
        case 'LoyaltyPromotionIncentive':
          return LoyaltyPromotionIncentive.fromJson(value);
        case 'LoyaltyPromotionIncentivePointsAdditionData':
          return LoyaltyPromotionIncentivePointsAdditionData.fromJson(value);
        case 'LoyaltyPromotionIncentivePointsMultiplierData':
          return LoyaltyPromotionIncentivePointsMultiplierData.fromJson(value);
        case 'LoyaltyPromotionIncentiveType':
          return LoyaltyPromotionIncentiveTypeTypeTransformer().decode(value);
        case 'LoyaltyPromotionStatus':
          return LoyaltyPromotionStatusTypeTransformer().decode(value);
        case 'LoyaltyPromotionTriggerLimit':
          return LoyaltyPromotionTriggerLimit.fromJson(value);
        case 'LoyaltyPromotionTriggerLimitInterval':
          return LoyaltyPromotionTriggerLimitIntervalTypeTransformer().decode(value);
        case 'LoyaltyReward':
          return LoyaltyReward.fromJson(value);
        case 'LoyaltyRewardStatus':
          return LoyaltyRewardStatusTypeTransformer().decode(value);
        case 'MeasurementUnit':
          return MeasurementUnit.fromJson(value);
        case 'MeasurementUnitArea':
          return MeasurementUnitAreaTypeTransformer().decode(value);
        case 'MeasurementUnitCustom':
          return MeasurementUnitCustom.fromJson(value);
        case 'MeasurementUnitGeneric':
          return MeasurementUnitGenericTypeTransformer().decode(value);
        case 'MeasurementUnitLength':
          return MeasurementUnitLengthTypeTransformer().decode(value);
        case 'MeasurementUnitTime':
          return MeasurementUnitTimeTypeTransformer().decode(value);
        case 'MeasurementUnitUnitType':
          return MeasurementUnitUnitTypeTypeTransformer().decode(value);
        case 'MeasurementUnitVolume':
          return MeasurementUnitVolumeTypeTransformer().decode(value);
        case 'MeasurementUnitWeight':
          return MeasurementUnitWeightTypeTransformer().decode(value);
        case 'Merchant':
          return Merchant.fromJson(value);
        case 'MerchantStatus':
          return MerchantStatusTypeTransformer().decode(value);
        case 'ModelBreak':
          return ModelBreak.fromJson(value);
        case 'ModifierLocationOverrides':
          return ModifierLocationOverrides.fromJson(value);
        case 'Money':
          return Money.fromJson(value);
        case 'ObtainTokenRequest':
          return ObtainTokenRequest.fromJson(value);
        case 'ObtainTokenResponse':
          return ObtainTokenResponse.fromJson(value);
        case 'Order':
          return Order.fromJson(value);
        case 'OrderCreated':
          return OrderCreated.fromJson(value);
        case 'OrderCreatedObject':
          return OrderCreatedObject.fromJson(value);
        case 'OrderEntry':
          return OrderEntry.fromJson(value);
        case 'OrderFulfillment':
          return OrderFulfillment.fromJson(value);
        case 'OrderFulfillmentDeliveryDetails':
          return OrderFulfillmentDeliveryDetails.fromJson(value);
        case 'OrderFulfillmentDeliveryDetailsScheduleType':
          return OrderFulfillmentDeliveryDetailsScheduleTypeTypeTransformer().decode(value);
        case 'OrderFulfillmentFulfillmentEntry':
          return OrderFulfillmentFulfillmentEntry.fromJson(value);
        case 'OrderFulfillmentFulfillmentLineItemApplication':
          return OrderFulfillmentFulfillmentLineItemApplicationTypeTransformer().decode(value);
        case 'OrderFulfillmentPickupDetails':
          return OrderFulfillmentPickupDetails.fromJson(value);
        case 'OrderFulfillmentPickupDetailsCurbsidePickupDetails':
          return OrderFulfillmentPickupDetailsCurbsidePickupDetails.fromJson(value);
        case 'OrderFulfillmentPickupDetailsScheduleType':
          return OrderFulfillmentPickupDetailsScheduleTypeTypeTransformer().decode(value);
        case 'OrderFulfillmentRecipient':
          return OrderFulfillmentRecipient.fromJson(value);
        case 'OrderFulfillmentShipmentDetails':
          return OrderFulfillmentShipmentDetails.fromJson(value);
        case 'OrderFulfillmentState':
          return OrderFulfillmentStateTypeTransformer().decode(value);
        case 'OrderFulfillmentType':
          return OrderFulfillmentTypeTypeTransformer().decode(value);
        case 'OrderFulfillmentUpdated':
          return OrderFulfillmentUpdated.fromJson(value);
        case 'OrderFulfillmentUpdatedObject':
          return OrderFulfillmentUpdatedObject.fromJson(value);
        case 'OrderFulfillmentUpdatedUpdate':
          return OrderFulfillmentUpdatedUpdate.fromJson(value);
        case 'OrderLineItem':
          return OrderLineItem.fromJson(value);
        case 'OrderLineItemAppliedDiscount':
          return OrderLineItemAppliedDiscount.fromJson(value);
        case 'OrderLineItemAppliedServiceCharge':
          return OrderLineItemAppliedServiceCharge.fromJson(value);
        case 'OrderLineItemAppliedTax':
          return OrderLineItemAppliedTax.fromJson(value);
        case 'OrderLineItemDiscount':
          return OrderLineItemDiscount.fromJson(value);
        case 'OrderLineItemDiscountScope':
          return OrderLineItemDiscountScopeTypeTransformer().decode(value);
        case 'OrderLineItemDiscountType':
          return OrderLineItemDiscountTypeTypeTransformer().decode(value);
        case 'OrderLineItemItemType':
          return OrderLineItemItemTypeTypeTransformer().decode(value);
        case 'OrderLineItemModifier':
          return OrderLineItemModifier.fromJson(value);
        case 'OrderLineItemPricingBlocklists':
          return OrderLineItemPricingBlocklists.fromJson(value);
        case 'OrderLineItemPricingBlocklistsBlockedDiscount':
          return OrderLineItemPricingBlocklistsBlockedDiscount.fromJson(value);
        case 'OrderLineItemPricingBlocklistsBlockedTax':
          return OrderLineItemPricingBlocklistsBlockedTax.fromJson(value);
        case 'OrderLineItemTax':
          return OrderLineItemTax.fromJson(value);
        case 'OrderLineItemTaxScope':
          return OrderLineItemTaxScopeTypeTransformer().decode(value);
        case 'OrderLineItemTaxType':
          return OrderLineItemTaxTypeTypeTransformer().decode(value);
        case 'OrderMoneyAmounts':
          return OrderMoneyAmounts.fromJson(value);
        case 'OrderPricingOptions':
          return OrderPricingOptions.fromJson(value);
        case 'OrderQuantityUnit':
          return OrderQuantityUnit.fromJson(value);
        case 'OrderReturn':
          return OrderReturn.fromJson(value);
        case 'OrderReturnDiscount':
          return OrderReturnDiscount.fromJson(value);
        case 'OrderReturnLineItem':
          return OrderReturnLineItem.fromJson(value);
        case 'OrderReturnLineItemModifier':
          return OrderReturnLineItemModifier.fromJson(value);
        case 'OrderReturnServiceCharge':
          return OrderReturnServiceCharge.fromJson(value);
        case 'OrderReturnTax':
          return OrderReturnTax.fromJson(value);
        case 'OrderReward':
          return OrderReward.fromJson(value);
        case 'OrderRoundingAdjustment':
          return OrderRoundingAdjustment.fromJson(value);
        case 'OrderServiceCharge':
          return OrderServiceCharge.fromJson(value);
        case 'OrderServiceChargeCalculationPhase':
          return OrderServiceChargeCalculationPhaseTypeTransformer().decode(value);
        case 'OrderServiceChargeScope':
          return OrderServiceChargeScopeTypeTransformer().decode(value);
        case 'OrderServiceChargeTreatmentType':
          return OrderServiceChargeTreatmentTypeTypeTransformer().decode(value);
        case 'OrderServiceChargeType':
          return OrderServiceChargeTypeTypeTransformer().decode(value);
        case 'OrderSource':
          return OrderSource.fromJson(value);
        case 'OrderState':
          return OrderStateTypeTransformer().decode(value);
        case 'OrderUpdated':
          return OrderUpdated.fromJson(value);
        case 'OrderUpdatedObject':
          return OrderUpdatedObject.fromJson(value);
        case 'PaginationCursor':
          return PaginationCursor.fromJson(value);
        case 'PauseSubscriptionRequest':
          return PauseSubscriptionRequest.fromJson(value);
        case 'PauseSubscriptionResponse':
          return PauseSubscriptionResponse.fromJson(value);
        case 'PayOrderRequest':
          return PayOrderRequest.fromJson(value);
        case 'PayOrderResponse':
          return PayOrderResponse.fromJson(value);
        case 'Payment':
          return Payment.fromJson(value);
        case 'PaymentBalanceActivityAppFeeRefundDetail':
          return PaymentBalanceActivityAppFeeRefundDetail.fromJson(value);
        case 'PaymentBalanceActivityAppFeeRevenueDetail':
          return PaymentBalanceActivityAppFeeRevenueDetail.fromJson(value);
        case 'PaymentBalanceActivityAutomaticSavingsDetail':
          return PaymentBalanceActivityAutomaticSavingsDetail.fromJson(value);
        case 'PaymentBalanceActivityAutomaticSavingsReversedDetail':
          return PaymentBalanceActivityAutomaticSavingsReversedDetail.fromJson(value);
        case 'PaymentBalanceActivityChargeDetail':
          return PaymentBalanceActivityChargeDetail.fromJson(value);
        case 'PaymentBalanceActivityDepositFeeDetail':
          return PaymentBalanceActivityDepositFeeDetail.fromJson(value);
        case 'PaymentBalanceActivityDisputeDetail':
          return PaymentBalanceActivityDisputeDetail.fromJson(value);
        case 'PaymentBalanceActivityFeeDetail':
          return PaymentBalanceActivityFeeDetail.fromJson(value);
        case 'PaymentBalanceActivityFreeProcessingDetail':
          return PaymentBalanceActivityFreeProcessingDetail.fromJson(value);
        case 'PaymentBalanceActivityHoldAdjustmentDetail':
          return PaymentBalanceActivityHoldAdjustmentDetail.fromJson(value);
        case 'PaymentBalanceActivityOpenDisputeDetail':
          return PaymentBalanceActivityOpenDisputeDetail.fromJson(value);
        case 'PaymentBalanceActivityOtherAdjustmentDetail':
          return PaymentBalanceActivityOtherAdjustmentDetail.fromJson(value);
        case 'PaymentBalanceActivityOtherDetail':
          return PaymentBalanceActivityOtherDetail.fromJson(value);
        case 'PaymentBalanceActivityRefundDetail':
          return PaymentBalanceActivityRefundDetail.fromJson(value);
        case 'PaymentBalanceActivityReleaseAdjustmentDetail':
          return PaymentBalanceActivityReleaseAdjustmentDetail.fromJson(value);
        case 'PaymentBalanceActivityReserveHoldDetail':
          return PaymentBalanceActivityReserveHoldDetail.fromJson(value);
        case 'PaymentBalanceActivityReserveReleaseDetail':
          return PaymentBalanceActivityReserveReleaseDetail.fromJson(value);
        case 'PaymentBalanceActivitySquareCapitalPaymentDetail':
          return PaymentBalanceActivitySquareCapitalPaymentDetail.fromJson(value);
        case 'PaymentBalanceActivitySquareCapitalReversedPaymentDetail':
          return PaymentBalanceActivitySquareCapitalReversedPaymentDetail.fromJson(value);
        case 'PaymentBalanceActivityTaxOnFeeDetail':
          return PaymentBalanceActivityTaxOnFeeDetail.fromJson(value);
        case 'PaymentBalanceActivityThirdPartyFeeDetail':
          return PaymentBalanceActivityThirdPartyFeeDetail.fromJson(value);
        case 'PaymentBalanceActivityThirdPartyFeeRefundDetail':
          return PaymentBalanceActivityThirdPartyFeeRefundDetail.fromJson(value);
        case 'PaymentLink':
          return PaymentLink.fromJson(value);
        case 'PaymentLinkRelatedResources':
          return PaymentLinkRelatedResources.fromJson(value);
        case 'PaymentOptions':
          return PaymentOptions.fromJson(value);
        case 'PaymentOptionsDelayAction':
          return PaymentOptionsDelayActionTypeTransformer().decode(value);
        case 'PaymentRefund':
          return PaymentRefund.fromJson(value);
        case 'Payout':
          return Payout.fromJson(value);
        case 'PayoutEntry':
          return PayoutEntry.fromJson(value);
        case 'PayoutFee':
          return PayoutFee.fromJson(value);
        case 'PayoutFeeType':
          return PayoutFeeTypeTypeTransformer().decode(value);
        case 'PayoutStatus':
          return PayoutStatusTypeTransformer().decode(value);
        case 'PayoutType':
          return PayoutTypeTypeTransformer().decode(value);
        case 'Phase':
          return Phase.fromJson(value);
        case 'PhaseInput':
          return PhaseInput.fromJson(value);
        case 'PrePopulatedData':
          return PrePopulatedData.fromJson(value);
        case 'ProcessingFee':
          return ProcessingFee.fromJson(value);
        case 'Product':
          return ProductTypeTransformer().decode(value);
        case 'ProductType':
          return ProductTypeTypeTransformer().decode(value);
        case 'PublishInvoiceRequest':
          return PublishInvoiceRequest.fromJson(value);
        case 'PublishInvoiceResponse':
          return PublishInvoiceResponse.fromJson(value);
        case 'QrCodeOptions':
          return QrCodeOptions.fromJson(value);
        case 'QuantityRatio':
          return QuantityRatio.fromJson(value);
        case 'QuickPay':
          return QuickPay.fromJson(value);
        case 'Range':
          return Range.fromJson(value);
        case 'ReceiptOptions':
          return ReceiptOptions.fromJson(value);
        case 'RedeemLoyaltyRewardRequest':
          return RedeemLoyaltyRewardRequest.fromJson(value);
        case 'RedeemLoyaltyRewardResponse':
          return RedeemLoyaltyRewardResponse.fromJson(value);
        case 'Refund':
          return Refund.fromJson(value);
        case 'RefundPaymentRequest':
          return RefundPaymentRequest.fromJson(value);
        case 'RefundPaymentResponse':
          return RefundPaymentResponse.fromJson(value);
        case 'RefundStatus':
          return RefundStatusTypeTransformer().decode(value);
        case 'RegisterDomainRequest':
          return RegisterDomainRequest.fromJson(value);
        case 'RegisterDomainResponse':
          return RegisterDomainResponse.fromJson(value);
        case 'RegisterDomainResponseStatus':
          return RegisterDomainResponseStatusTypeTransformer().decode(value);
        case 'RemoveGroupFromCustomerResponse':
          return RemoveGroupFromCustomerResponse.fromJson(value);
        case 'RenewTokenRequest':
          return RenewTokenRequest.fromJson(value);
        case 'RenewTokenResponse':
          return RenewTokenResponse.fromJson(value);
        case 'ResumeSubscriptionRequest':
          return ResumeSubscriptionRequest.fromJson(value);
        case 'ResumeSubscriptionResponse':
          return ResumeSubscriptionResponse.fromJson(value);
        case 'RetrieveBookingCustomAttributeDefinitionRequest':
          return RetrieveBookingCustomAttributeDefinitionRequest.fromJson(value);
        case 'RetrieveBookingCustomAttributeDefinitionResponse':
          return RetrieveBookingCustomAttributeDefinitionResponse.fromJson(value);
        case 'RetrieveBookingCustomAttributeRequest':
          return RetrieveBookingCustomAttributeRequest.fromJson(value);
        case 'RetrieveBookingCustomAttributeResponse':
          return RetrieveBookingCustomAttributeResponse.fromJson(value);
        case 'RetrieveBookingResponse':
          return RetrieveBookingResponse.fromJson(value);
        case 'RetrieveBusinessBookingProfileResponse':
          return RetrieveBusinessBookingProfileResponse.fromJson(value);
        case 'RetrieveCardResponse':
          return RetrieveCardResponse.fromJson(value);
        case 'RetrieveCashDrawerShiftRequest':
          return RetrieveCashDrawerShiftRequest.fromJson(value);
        case 'RetrieveCashDrawerShiftResponse':
          return RetrieveCashDrawerShiftResponse.fromJson(value);
        case 'RetrieveCatalogObjectRequest':
          return RetrieveCatalogObjectRequest.fromJson(value);
        case 'RetrieveCatalogObjectResponse':
          return RetrieveCatalogObjectResponse.fromJson(value);
        case 'RetrieveCustomerCustomAttributeDefinitionRequest':
          return RetrieveCustomerCustomAttributeDefinitionRequest.fromJson(value);
        case 'RetrieveCustomerCustomAttributeDefinitionResponse':
          return RetrieveCustomerCustomAttributeDefinitionResponse.fromJson(value);
        case 'RetrieveCustomerCustomAttributeRequest':
          return RetrieveCustomerCustomAttributeRequest.fromJson(value);
        case 'RetrieveCustomerCustomAttributeResponse':
          return RetrieveCustomerCustomAttributeResponse.fromJson(value);
        case 'RetrieveCustomerGroupResponse':
          return RetrieveCustomerGroupResponse.fromJson(value);
        case 'RetrieveCustomerResponse':
          return RetrieveCustomerResponse.fromJson(value);
        case 'RetrieveCustomerSegmentResponse':
          return RetrieveCustomerSegmentResponse.fromJson(value);
        case 'RetrieveDisputeEvidenceResponse':
          return RetrieveDisputeEvidenceResponse.fromJson(value);
        case 'RetrieveDisputeResponse':
          return RetrieveDisputeResponse.fromJson(value);
        case 'RetrieveEmployeeResponse':
          return RetrieveEmployeeResponse.fromJson(value);
        case 'RetrieveGiftCardFromGANRequest':
          return RetrieveGiftCardFromGANRequest.fromJson(value);
        case 'RetrieveGiftCardFromGANResponse':
          return RetrieveGiftCardFromGANResponse.fromJson(value);
        case 'RetrieveGiftCardFromNonceRequest':
          return RetrieveGiftCardFromNonceRequest.fromJson(value);
        case 'RetrieveGiftCardFromNonceResponse':
          return RetrieveGiftCardFromNonceResponse.fromJson(value);
        case 'RetrieveGiftCardResponse':
          return RetrieveGiftCardResponse.fromJson(value);
        case 'RetrieveInventoryAdjustmentResponse':
          return RetrieveInventoryAdjustmentResponse.fromJson(value);
        case 'RetrieveInventoryChangesRequest':
          return RetrieveInventoryChangesRequest.fromJson(value);
        case 'RetrieveInventoryChangesResponse':
          return RetrieveInventoryChangesResponse.fromJson(value);
        case 'RetrieveInventoryCountRequest':
          return RetrieveInventoryCountRequest.fromJson(value);
        case 'RetrieveInventoryCountResponse':
          return RetrieveInventoryCountResponse.fromJson(value);
        case 'RetrieveInventoryPhysicalCountResponse':
          return RetrieveInventoryPhysicalCountResponse.fromJson(value);
        case 'RetrieveInventoryTransferResponse':
          return RetrieveInventoryTransferResponse.fromJson(value);
        case 'RetrieveLocationBookingProfileResponse':
          return RetrieveLocationBookingProfileResponse.fromJson(value);
        case 'RetrieveLocationCustomAttributeDefinitionRequest':
          return RetrieveLocationCustomAttributeDefinitionRequest.fromJson(value);
        case 'RetrieveLocationCustomAttributeDefinitionResponse':
          return RetrieveLocationCustomAttributeDefinitionResponse.fromJson(value);
        case 'RetrieveLocationCustomAttributeRequest':
          return RetrieveLocationCustomAttributeRequest.fromJson(value);
        case 'RetrieveLocationCustomAttributeResponse':
          return RetrieveLocationCustomAttributeResponse.fromJson(value);
        case 'RetrieveLocationResponse':
          return RetrieveLocationResponse.fromJson(value);
        case 'RetrieveLocationSettingsResponse':
          return RetrieveLocationSettingsResponse.fromJson(value);
        case 'RetrieveLoyaltyAccountResponse':
          return RetrieveLoyaltyAccountResponse.fromJson(value);
        case 'RetrieveLoyaltyProgramResponse':
          return RetrieveLoyaltyProgramResponse.fromJson(value);
        case 'RetrieveLoyaltyPromotionResponse':
          return RetrieveLoyaltyPromotionResponse.fromJson(value);
        case 'RetrieveLoyaltyRewardResponse':
          return RetrieveLoyaltyRewardResponse.fromJson(value);
        case 'RetrieveMerchantCustomAttributeDefinitionRequest':
          return RetrieveMerchantCustomAttributeDefinitionRequest.fromJson(value);
        case 'RetrieveMerchantCustomAttributeDefinitionResponse':
          return RetrieveMerchantCustomAttributeDefinitionResponse.fromJson(value);
        case 'RetrieveMerchantCustomAttributeRequest':
          return RetrieveMerchantCustomAttributeRequest.fromJson(value);
        case 'RetrieveMerchantCustomAttributeResponse':
          return RetrieveMerchantCustomAttributeResponse.fromJson(value);
        case 'RetrieveMerchantResponse':
          return RetrieveMerchantResponse.fromJson(value);
        case 'RetrieveMerchantSettingsResponse':
          return RetrieveMerchantSettingsResponse.fromJson(value);
        case 'RetrieveOrderCustomAttributeDefinitionRequest':
          return RetrieveOrderCustomAttributeDefinitionRequest.fromJson(value);
        case 'RetrieveOrderCustomAttributeDefinitionResponse':
          return RetrieveOrderCustomAttributeDefinitionResponse.fromJson(value);
        case 'RetrieveOrderCustomAttributeRequest':
          return RetrieveOrderCustomAttributeRequest.fromJson(value);
        case 'RetrieveOrderCustomAttributeResponse':
          return RetrieveOrderCustomAttributeResponse.fromJson(value);
        case 'RetrieveOrderResponse':
          return RetrieveOrderResponse.fromJson(value);
        case 'RetrievePaymentLinkResponse':
          return RetrievePaymentLinkResponse.fromJson(value);
        case 'RetrieveSnippetResponse':
          return RetrieveSnippetResponse.fromJson(value);
        case 'RetrieveSubscriptionRequest':
          return RetrieveSubscriptionRequest.fromJson(value);
        case 'RetrieveSubscriptionResponse':
          return RetrieveSubscriptionResponse.fromJson(value);
        case 'RetrieveTeamMemberBookingProfileResponse':
          return RetrieveTeamMemberBookingProfileResponse.fromJson(value);
        case 'RetrieveTeamMemberResponse':
          return RetrieveTeamMemberResponse.fromJson(value);
        case 'RetrieveTokenStatusResponse':
          return RetrieveTokenStatusResponse.fromJson(value);
        case 'RetrieveTransactionResponse':
          return RetrieveTransactionResponse.fromJson(value);
        case 'RetrieveVendorResponse':
          return RetrieveVendorResponse.fromJson(value);
        case 'RetrieveWageSettingResponse':
          return RetrieveWageSettingResponse.fromJson(value);
        case 'RetrieveWebhookSubscriptionResponse':
          return RetrieveWebhookSubscriptionResponse.fromJson(value);
        case 'RevokeTokenRequest':
          return RevokeTokenRequest.fromJson(value);
        case 'RevokeTokenResponse':
          return RevokeTokenResponse.fromJson(value);
        case 'RiskEvaluation':
          return RiskEvaluation.fromJson(value);
        case 'RiskEvaluationRiskLevel':
          return RiskEvaluationRiskLevelTypeTransformer().decode(value);
        case 'SaveCardOptions':
          return SaveCardOptions.fromJson(value);
        case 'SearchAvailabilityFilter':
          return SearchAvailabilityFilter.fromJson(value);
        case 'SearchAvailabilityQuery':
          return SearchAvailabilityQuery.fromJson(value);
        case 'SearchAvailabilityRequest':
          return SearchAvailabilityRequest.fromJson(value);
        case 'SearchAvailabilityResponse':
          return SearchAvailabilityResponse.fromJson(value);
        case 'SearchCatalogItemsRequest':
          return SearchCatalogItemsRequest.fromJson(value);
        case 'SearchCatalogItemsRequestStockLevel':
          return SearchCatalogItemsRequestStockLevelTypeTransformer().decode(value);
        case 'SearchCatalogItemsResponse':
          return SearchCatalogItemsResponse.fromJson(value);
        case 'SearchCatalogObjectsRequest':
          return SearchCatalogObjectsRequest.fromJson(value);
        case 'SearchCatalogObjectsResponse':
          return SearchCatalogObjectsResponse.fromJson(value);
        case 'SearchCustomersRequest':
          return SearchCustomersRequest.fromJson(value);
        case 'SearchCustomersResponse':
          return SearchCustomersResponse.fromJson(value);
        case 'SearchInvoicesRequest':
          return SearchInvoicesRequest.fromJson(value);
        case 'SearchInvoicesResponse':
          return SearchInvoicesResponse.fromJson(value);
        case 'SearchLoyaltyAccountsRequest':
          return SearchLoyaltyAccountsRequest.fromJson(value);
        case 'SearchLoyaltyAccountsRequestLoyaltyAccountQuery':
          return SearchLoyaltyAccountsRequestLoyaltyAccountQuery.fromJson(value);
        case 'SearchLoyaltyAccountsResponse':
          return SearchLoyaltyAccountsResponse.fromJson(value);
        case 'SearchLoyaltyEventsRequest':
          return SearchLoyaltyEventsRequest.fromJson(value);
        case 'SearchLoyaltyEventsResponse':
          return SearchLoyaltyEventsResponse.fromJson(value);
        case 'SearchLoyaltyRewardsRequest':
          return SearchLoyaltyRewardsRequest.fromJson(value);
        case 'SearchLoyaltyRewardsRequestLoyaltyRewardQuery':
          return SearchLoyaltyRewardsRequestLoyaltyRewardQuery.fromJson(value);
        case 'SearchLoyaltyRewardsResponse':
          return SearchLoyaltyRewardsResponse.fromJson(value);
        case 'SearchOrdersCustomerFilter':
          return SearchOrdersCustomerFilter.fromJson(value);
        case 'SearchOrdersDateTimeFilter':
          return SearchOrdersDateTimeFilter.fromJson(value);
        case 'SearchOrdersFilter':
          return SearchOrdersFilter.fromJson(value);
        case 'SearchOrdersFulfillmentFilter':
          return SearchOrdersFulfillmentFilter.fromJson(value);
        case 'SearchOrdersQuery':
          return SearchOrdersQuery.fromJson(value);
        case 'SearchOrdersRequest':
          return SearchOrdersRequest.fromJson(value);
        case 'SearchOrdersResponse':
          return SearchOrdersResponse.fromJson(value);
        case 'SearchOrdersSort':
          return SearchOrdersSort.fromJson(value);
        case 'SearchOrdersSortField':
          return SearchOrdersSortFieldTypeTransformer().decode(value);
        case 'SearchOrdersSourceFilter':
          return SearchOrdersSourceFilter.fromJson(value);
        case 'SearchOrdersStateFilter':
          return SearchOrdersStateFilter.fromJson(value);
        case 'SearchShiftsRequest':
          return SearchShiftsRequest.fromJson(value);
        case 'SearchShiftsResponse':
          return SearchShiftsResponse.fromJson(value);
        case 'SearchSubscriptionsFilter':
          return SearchSubscriptionsFilter.fromJson(value);
        case 'SearchSubscriptionsQuery':
          return SearchSubscriptionsQuery.fromJson(value);
        case 'SearchSubscriptionsRequest':
          return SearchSubscriptionsRequest.fromJson(value);
        case 'SearchSubscriptionsResponse':
          return SearchSubscriptionsResponse.fromJson(value);
        case 'SearchTeamMembersFilter':
          return SearchTeamMembersFilter.fromJson(value);
        case 'SearchTeamMembersQuery':
          return SearchTeamMembersQuery.fromJson(value);
        case 'SearchTeamMembersRequest':
          return SearchTeamMembersRequest.fromJson(value);
        case 'SearchTeamMembersResponse':
          return SearchTeamMembersResponse.fromJson(value);
        case 'SearchTerminalActionsRequest':
          return SearchTerminalActionsRequest.fromJson(value);
        case 'SearchTerminalActionsResponse':
          return SearchTerminalActionsResponse.fromJson(value);
        case 'SearchTerminalCheckoutsRequest':
          return SearchTerminalCheckoutsRequest.fromJson(value);
        case 'SearchTerminalCheckoutsResponse':
          return SearchTerminalCheckoutsResponse.fromJson(value);
        case 'SearchTerminalRefundsRequest':
          return SearchTerminalRefundsRequest.fromJson(value);
        case 'SearchTerminalRefundsResponse':
          return SearchTerminalRefundsResponse.fromJson(value);
        case 'SearchVendorsRequest':
          return SearchVendorsRequest.fromJson(value);
        case 'SearchVendorsRequestFilter':
          return SearchVendorsRequestFilter.fromJson(value);
        case 'SearchVendorsRequestSort':
          return SearchVendorsRequestSort.fromJson(value);
        case 'SearchVendorsRequestSortField':
          return SearchVendorsRequestSortFieldTypeTransformer().decode(value);
        case 'SearchVendorsResponse':
          return SearchVendorsResponse.fromJson(value);
        case 'SegmentFilter':
          return SegmentFilter.fromJson(value);
        case 'SelectOption':
          return SelectOption.fromJson(value);
        case 'SelectOptions':
          return SelectOptions.fromJson(value);
        case 'Shift':
          return Shift.fromJson(value);
        case 'ShiftFilter':
          return ShiftFilter.fromJson(value);
        case 'ShiftFilterStatus':
          return ShiftFilterStatusTypeTransformer().decode(value);
        case 'ShiftQuery':
          return ShiftQuery.fromJson(value);
        case 'ShiftSort':
          return ShiftSort.fromJson(value);
        case 'ShiftSortField':
          return ShiftSortFieldTypeTransformer().decode(value);
        case 'ShiftStatus':
          return ShiftStatusTypeTransformer().decode(value);
        case 'ShiftWage':
          return ShiftWage.fromJson(value);
        case 'ShiftWorkday':
          return ShiftWorkday.fromJson(value);
        case 'ShiftWorkdayMatcher':
          return ShiftWorkdayMatcherTypeTransformer().decode(value);
        case 'ShippingFee':
          return ShippingFee.fromJson(value);
        case 'SignatureImage':
          return SignatureImage.fromJson(value);
        case 'SignatureOptions':
          return SignatureOptions.fromJson(value);
        case 'Site':
          return Site.fromJson(value);
        case 'Snippet':
          return Snippet.fromJson(value);
        case 'SnippetResponse':
          return SnippetResponse.fromJson(value);
        case 'SortOrder':
          return SortOrderTypeTransformer().decode(value);
        case 'SourceApplication':
          return SourceApplication.fromJson(value);
        case 'SquareAccountDetails':
          return SquareAccountDetails.fromJson(value);
        case 'StandardUnitDescription':
          return StandardUnitDescription.fromJson(value);
        case 'StandardUnitDescriptionGroup':
          return StandardUnitDescriptionGroup.fromJson(value);
        case 'SubmitEvidenceResponse':
          return SubmitEvidenceResponse.fromJson(value);
        case 'Subscription':
          return Subscription.fromJson(value);
        case 'SubscriptionAction':
          return SubscriptionAction.fromJson(value);
        case 'SubscriptionActionType':
          return SubscriptionActionTypeTypeTransformer().decode(value);
        case 'SubscriptionCadence':
          return SubscriptionCadenceTypeTransformer().decode(value);
        case 'SubscriptionEvent':
          return SubscriptionEvent.fromJson(value);
        case 'SubscriptionEventInfo':
          return SubscriptionEventInfo.fromJson(value);
        case 'SubscriptionEventInfoCode':
          return SubscriptionEventInfoCodeTypeTransformer().decode(value);
        case 'SubscriptionEventSubscriptionEventType':
          return SubscriptionEventSubscriptionEventTypeTypeTransformer().decode(value);
        case 'SubscriptionPhase':
          return SubscriptionPhase.fromJson(value);
        case 'SubscriptionPricing':
          return SubscriptionPricing.fromJson(value);
        case 'SubscriptionPricingType':
          return SubscriptionPricingTypeTypeTransformer().decode(value);
        case 'SubscriptionSource':
          return SubscriptionSource.fromJson(value);
        case 'SubscriptionStatus':
          return SubscriptionStatusTypeTransformer().decode(value);
        case 'SubscriptionTestResult':
          return SubscriptionTestResult.fromJson(value);
        case 'SwapPlanRequest':
          return SwapPlanRequest.fromJson(value);
        case 'SwapPlanResponse':
          return SwapPlanResponse.fromJson(value);
        case 'TaxCalculationPhase':
          return TaxCalculationPhaseTypeTransformer().decode(value);
        case 'TaxIds':
          return TaxIds.fromJson(value);
        case 'TaxInclusionType':
          return TaxInclusionTypeTypeTransformer().decode(value);
        case 'TeamMember':
          return TeamMember.fromJson(value);
        case 'TeamMemberAssignedLocations':
          return TeamMemberAssignedLocations.fromJson(value);
        case 'TeamMemberAssignedLocationsAssignmentType':
          return TeamMemberAssignedLocationsAssignmentTypeTypeTransformer().decode(value);
        case 'TeamMemberBookingProfile':
          return TeamMemberBookingProfile.fromJson(value);
        case 'TeamMemberInvitationStatus':
          return TeamMemberInvitationStatusTypeTransformer().decode(value);
        case 'TeamMemberStatus':
          return TeamMemberStatusTypeTransformer().decode(value);
        case 'TeamMemberWage':
          return TeamMemberWage.fromJson(value);
        case 'Tender':
          return Tender.fromJson(value);
        case 'TenderBankAccountDetails':
          return TenderBankAccountDetails.fromJson(value);
        case 'TenderBankAccountDetailsStatus':
          return TenderBankAccountDetailsStatusTypeTransformer().decode(value);
        case 'TenderBuyNowPayLaterDetails':
          return TenderBuyNowPayLaterDetails.fromJson(value);
        case 'TenderBuyNowPayLaterDetailsBrand':
          return TenderBuyNowPayLaterDetailsBrandTypeTransformer().decode(value);
        case 'TenderBuyNowPayLaterDetailsStatus':
          return TenderBuyNowPayLaterDetailsStatusTypeTransformer().decode(value);
        case 'TenderCardDetails':
          return TenderCardDetails.fromJson(value);
        case 'TenderCardDetailsEntryMethod':
          return TenderCardDetailsEntryMethodTypeTransformer().decode(value);
        case 'TenderCardDetailsStatus':
          return TenderCardDetailsStatusTypeTransformer().decode(value);
        case 'TenderCashDetails':
          return TenderCashDetails.fromJson(value);
        case 'TenderSquareAccountDetails':
          return TenderSquareAccountDetails.fromJson(value);
        case 'TenderSquareAccountDetailsStatus':
          return TenderSquareAccountDetailsStatusTypeTransformer().decode(value);
        case 'TenderType':
          return TenderTypeTypeTransformer().decode(value);
        case 'TerminalAction':
          return TerminalAction.fromJson(value);
        case 'TerminalActionActionType':
          return TerminalActionActionTypeTypeTransformer().decode(value);
        case 'TerminalActionQuery':
          return TerminalActionQuery.fromJson(value);
        case 'TerminalActionQueryFilter':
          return TerminalActionQueryFilter.fromJson(value);
        case 'TerminalActionQuerySort':
          return TerminalActionQuerySort.fromJson(value);
        case 'TerminalCheckout':
          return TerminalCheckout.fromJson(value);
        case 'TerminalCheckoutQuery':
          return TerminalCheckoutQuery.fromJson(value);
        case 'TerminalCheckoutQueryFilter':
          return TerminalCheckoutQueryFilter.fromJson(value);
        case 'TerminalCheckoutQuerySort':
          return TerminalCheckoutQuerySort.fromJson(value);
        case 'TerminalRefund':
          return TerminalRefund.fromJson(value);
        case 'TerminalRefundQuery':
          return TerminalRefundQuery.fromJson(value);
        case 'TerminalRefundQueryFilter':
          return TerminalRefundQueryFilter.fromJson(value);
        case 'TerminalRefundQuerySort':
          return TerminalRefundQuerySort.fromJson(value);
        case 'TestWebhookSubscriptionRequest':
          return TestWebhookSubscriptionRequest.fromJson(value);
        case 'TestWebhookSubscriptionResponse':
          return TestWebhookSubscriptionResponse.fromJson(value);
        case 'TimeRange':
          return TimeRange.fromJson(value);
        case 'TipSettings':
          return TipSettings.fromJson(value);
        case 'Transaction':
          return Transaction.fromJson(value);
        case 'TransactionProduct':
          return TransactionProductTypeTransformer().decode(value);
        case 'TransactionType':
          return TransactionTypeTypeTransformer().decode(value);
        case 'UnlinkCustomerFromGiftCardRequest':
          return UnlinkCustomerFromGiftCardRequest.fromJson(value);
        case 'UnlinkCustomerFromGiftCardResponse':
          return UnlinkCustomerFromGiftCardResponse.fromJson(value);
        case 'UpdateBookingCustomAttributeDefinitionRequest':
          return UpdateBookingCustomAttributeDefinitionRequest.fromJson(value);
        case 'UpdateBookingCustomAttributeDefinitionResponse':
          return UpdateBookingCustomAttributeDefinitionResponse.fromJson(value);
        case 'UpdateBookingRequest':
          return UpdateBookingRequest.fromJson(value);
        case 'UpdateBookingResponse':
          return UpdateBookingResponse.fromJson(value);
        case 'UpdateBreakTypeRequest':
          return UpdateBreakTypeRequest.fromJson(value);
        case 'UpdateBreakTypeResponse':
          return UpdateBreakTypeResponse.fromJson(value);
        case 'UpdateCustomerCustomAttributeDefinitionRequest':
          return UpdateCustomerCustomAttributeDefinitionRequest.fromJson(value);
        case 'UpdateCustomerCustomAttributeDefinitionResponse':
          return UpdateCustomerCustomAttributeDefinitionResponse.fromJson(value);
        case 'UpdateCustomerGroupRequest':
          return UpdateCustomerGroupRequest.fromJson(value);
        case 'UpdateCustomerGroupResponse':
          return UpdateCustomerGroupResponse.fromJson(value);
        case 'UpdateCustomerRequest':
          return UpdateCustomerRequest.fromJson(value);
        case 'UpdateCustomerResponse':
          return UpdateCustomerResponse.fromJson(value);
        case 'UpdateInvoiceRequest':
          return UpdateInvoiceRequest.fromJson(value);
        case 'UpdateInvoiceResponse':
          return UpdateInvoiceResponse.fromJson(value);
        case 'UpdateItemModifierListsRequest':
          return UpdateItemModifierListsRequest.fromJson(value);
        case 'UpdateItemModifierListsResponse':
          return UpdateItemModifierListsResponse.fromJson(value);
        case 'UpdateItemTaxesRequest':
          return UpdateItemTaxesRequest.fromJson(value);
        case 'UpdateItemTaxesResponse':
          return UpdateItemTaxesResponse.fromJson(value);
        case 'UpdateLocationCustomAttributeDefinitionRequest':
          return UpdateLocationCustomAttributeDefinitionRequest.fromJson(value);
        case 'UpdateLocationCustomAttributeDefinitionResponse':
          return UpdateLocationCustomAttributeDefinitionResponse.fromJson(value);
        case 'UpdateLocationRequest':
          return UpdateLocationRequest.fromJson(value);
        case 'UpdateLocationResponse':
          return UpdateLocationResponse.fromJson(value);
        case 'UpdateLocationSettingsRequest':
          return UpdateLocationSettingsRequest.fromJson(value);
        case 'UpdateLocationSettingsResponse':
          return UpdateLocationSettingsResponse.fromJson(value);
        case 'UpdateMerchantCustomAttributeDefinitionRequest':
          return UpdateMerchantCustomAttributeDefinitionRequest.fromJson(value);
        case 'UpdateMerchantCustomAttributeDefinitionResponse':
          return UpdateMerchantCustomAttributeDefinitionResponse.fromJson(value);
        case 'UpdateMerchantSettingsRequest':
          return UpdateMerchantSettingsRequest.fromJson(value);
        case 'UpdateMerchantSettingsResponse':
          return UpdateMerchantSettingsResponse.fromJson(value);
        case 'UpdateOrderCustomAttributeDefinitionRequest':
          return UpdateOrderCustomAttributeDefinitionRequest.fromJson(value);
        case 'UpdateOrderCustomAttributeDefinitionResponse':
          return UpdateOrderCustomAttributeDefinitionResponse.fromJson(value);
        case 'UpdateOrderRequest':
          return UpdateOrderRequest.fromJson(value);
        case 'UpdateOrderResponse':
          return UpdateOrderResponse.fromJson(value);
        case 'UpdatePaymentLinkRequest':
          return UpdatePaymentLinkRequest.fromJson(value);
        case 'UpdatePaymentLinkResponse':
          return UpdatePaymentLinkResponse.fromJson(value);
        case 'UpdatePaymentRequest':
          return UpdatePaymentRequest.fromJson(value);
        case 'UpdatePaymentResponse':
          return UpdatePaymentResponse.fromJson(value);
        case 'UpdateShiftRequest':
          return UpdateShiftRequest.fromJson(value);
        case 'UpdateShiftResponse':
          return UpdateShiftResponse.fromJson(value);
        case 'UpdateSubscriptionRequest':
          return UpdateSubscriptionRequest.fromJson(value);
        case 'UpdateSubscriptionResponse':
          return UpdateSubscriptionResponse.fromJson(value);
        case 'UpdateTeamMemberRequest':
          return UpdateTeamMemberRequest.fromJson(value);
        case 'UpdateTeamMemberResponse':
          return UpdateTeamMemberResponse.fromJson(value);
        case 'UpdateVendorRequest':
          return UpdateVendorRequest.fromJson(value);
        case 'UpdateVendorResponse':
          return UpdateVendorResponse.fromJson(value);
        case 'UpdateWageSettingRequest':
          return UpdateWageSettingRequest.fromJson(value);
        case 'UpdateWageSettingResponse':
          return UpdateWageSettingResponse.fromJson(value);
        case 'UpdateWebhookSubscriptionRequest':
          return UpdateWebhookSubscriptionRequest.fromJson(value);
        case 'UpdateWebhookSubscriptionResponse':
          return UpdateWebhookSubscriptionResponse.fromJson(value);
        case 'UpdateWebhookSubscriptionSignatureKeyRequest':
          return UpdateWebhookSubscriptionSignatureKeyRequest.fromJson(value);
        case 'UpdateWebhookSubscriptionSignatureKeyResponse':
          return UpdateWebhookSubscriptionSignatureKeyResponse.fromJson(value);
        case 'UpdateWorkweekConfigRequest':
          return UpdateWorkweekConfigRequest.fromJson(value);
        case 'UpdateWorkweekConfigResponse':
          return UpdateWorkweekConfigResponse.fromJson(value);
        case 'UpsertBookingCustomAttributeRequest':
          return UpsertBookingCustomAttributeRequest.fromJson(value);
        case 'UpsertBookingCustomAttributeResponse':
          return UpsertBookingCustomAttributeResponse.fromJson(value);
        case 'UpsertCatalogObjectRequest':
          return UpsertCatalogObjectRequest.fromJson(value);
        case 'UpsertCatalogObjectResponse':
          return UpsertCatalogObjectResponse.fromJson(value);
        case 'UpsertCustomerCustomAttributeRequest':
          return UpsertCustomerCustomAttributeRequest.fromJson(value);
        case 'UpsertCustomerCustomAttributeResponse':
          return UpsertCustomerCustomAttributeResponse.fromJson(value);
        case 'UpsertLocationCustomAttributeRequest':
          return UpsertLocationCustomAttributeRequest.fromJson(value);
        case 'UpsertLocationCustomAttributeResponse':
          return UpsertLocationCustomAttributeResponse.fromJson(value);
        case 'UpsertMerchantCustomAttributeRequest':
          return UpsertMerchantCustomAttributeRequest.fromJson(value);
        case 'UpsertMerchantCustomAttributeResponse':
          return UpsertMerchantCustomAttributeResponse.fromJson(value);
        case 'UpsertOrderCustomAttributeRequest':
          return UpsertOrderCustomAttributeRequest.fromJson(value);
        case 'UpsertOrderCustomAttributeResponse':
          return UpsertOrderCustomAttributeResponse.fromJson(value);
        case 'UpsertSnippetRequest':
          return UpsertSnippetRequest.fromJson(value);
        case 'UpsertSnippetResponse':
          return UpsertSnippetResponse.fromJson(value);
        case 'V1CreateRefundRequest':
          return V1CreateRefundRequest.fromJson(value);
        case 'V1CreateRefundRequestType':
          return V1CreateRefundRequestTypeTypeTransformer().decode(value);
        case 'V1Device':
          return V1Device.fromJson(value);
        case 'V1ListOrdersRequest':
          return V1ListOrdersRequest.fromJson(value);
        case 'V1ListOrdersResponse':
          return V1ListOrdersResponse.fromJson(value);
        case 'V1ListPaymentsRequest':
          return V1ListPaymentsRequest.fromJson(value);
        case 'V1ListPaymentsResponse':
          return V1ListPaymentsResponse.fromJson(value);
        case 'V1ListRefundsRequest':
          return V1ListRefundsRequest.fromJson(value);
        case 'V1ListRefundsResponse':
          return V1ListRefundsResponse.fromJson(value);
        case 'V1ListSettlementsRequest':
          return V1ListSettlementsRequest.fromJson(value);
        case 'V1ListSettlementsRequestStatus':
          return V1ListSettlementsRequestStatusTypeTransformer().decode(value);
        case 'V1ListSettlementsResponse':
          return V1ListSettlementsResponse.fromJson(value);
        case 'V1Money':
          return V1Money.fromJson(value);
        case 'V1Order':
          return V1Order.fromJson(value);
        case 'V1OrderHistoryEntry':
          return V1OrderHistoryEntry.fromJson(value);
        case 'V1OrderHistoryEntryAction':
          return V1OrderHistoryEntryActionTypeTransformer().decode(value);
        case 'V1OrderState':
          return V1OrderStateTypeTransformer().decode(value);
        case 'V1Payment':
          return V1Payment.fromJson(value);
        case 'V1PaymentDiscount':
          return V1PaymentDiscount.fromJson(value);
        case 'V1PaymentItemDetail':
          return V1PaymentItemDetail.fromJson(value);
        case 'V1PaymentItemization':
          return V1PaymentItemization.fromJson(value);
        case 'V1PaymentItemizationItemizationType':
          return V1PaymentItemizationItemizationTypeTypeTransformer().decode(value);
        case 'V1PaymentModifier':
          return V1PaymentModifier.fromJson(value);
        case 'V1PaymentSurcharge':
          return V1PaymentSurcharge.fromJson(value);
        case 'V1PaymentSurchargeType':
          return V1PaymentSurchargeTypeTypeTransformer().decode(value);
        case 'V1PaymentTax':
          return V1PaymentTax.fromJson(value);
        case 'V1PaymentTaxInclusionType':
          return V1PaymentTaxInclusionTypeTypeTransformer().decode(value);
        case 'V1PhoneNumber':
          return V1PhoneNumber.fromJson(value);
        case 'V1Refund':
          return V1Refund.fromJson(value);
        case 'V1RefundType':
          return V1RefundTypeTypeTransformer().decode(value);
        case 'V1Settlement':
          return V1Settlement.fromJson(value);
        case 'V1SettlementEntry':
          return V1SettlementEntry.fromJson(value);
        case 'V1SettlementEntryType':
          return V1SettlementEntryTypeTypeTransformer().decode(value);
        case 'V1SettlementStatus':
          return V1SettlementStatusTypeTransformer().decode(value);
        case 'V1Tender':
          return V1Tender.fromJson(value);
        case 'V1TenderCardBrand':
          return V1TenderCardBrandTypeTransformer().decode(value);
        case 'V1TenderEntryMethod':
          return V1TenderEntryMethodTypeTransformer().decode(value);
        case 'V1TenderType':
          return V1TenderTypeTypeTransformer().decode(value);
        case 'V1UpdateOrderRequest':
          return V1UpdateOrderRequest.fromJson(value);
        case 'V1UpdateOrderRequestAction':
          return V1UpdateOrderRequestActionTypeTransformer().decode(value);
        case 'Vendor':
          return Vendor.fromJson(value);
        case 'VendorContact':
          return VendorContact.fromJson(value);
        case 'VendorStatus':
          return VendorStatusTypeTransformer().decode(value);
        case 'VisibilityFilter':
          return VisibilityFilterTypeTransformer().decode(value);
        case 'VoidTransactionResponse':
          return VoidTransactionResponse.fromJson(value);
        case 'WageSetting':
          return WageSetting.fromJson(value);
        case 'WebhookSubscription':
          return WebhookSubscription.fromJson(value);
        case 'Weekday':
          return WeekdayTypeTransformer().decode(value);
        case 'WorkweekConfig':
          return WorkweekConfig.fromJson(value);
        default:
          dynamic match;
          if (value is List && (match = _regList.firstMatch(targetType)?.group(1)) != null) {
            return value
              .map<dynamic>((dynamic v) => fromJson(v, match, growable: growable,))
              .toList(growable: growable);
          }
          if (value is Set && (match = _regSet.firstMatch(targetType)?.group(1)) != null) {
            return value
              .map<dynamic>((dynamic v) => fromJson(v, match, growable: growable,))
              .toSet();
          }
          if (value is Map && (match = _regMap.firstMatch(targetType)?.group(1)) != null) {
            return Map<String, dynamic>.fromIterables(
              value.keys.cast<String>(),
              value.values.map<dynamic>((dynamic v) => fromJson(v, match, growable: growable,)),
            );
          }
      }
    } on Exception catch (error, trace) {
      throw ApiException.withInner(HttpStatus.internalServerError, 'Exception during deserialization.', error, trace,);
    }
    throw ApiException(HttpStatus.internalServerError, 'Could not find a suitable class for deserialization',);
  }
}

/// Primarily intended for use in an isolate.
class DeserializationMessage {
  const DeserializationMessage({
    required this.json,
    required this.targetType,
    this.growable = false,
  });

  /// The JSON value to deserialize.
  final String json;

  /// Target type to deserialize to.
  final String targetType;

  /// Whether to make deserialized lists or maps growable.
  final bool growable;
}

/// Primarily intended for use in an isolate.
Future<dynamic> decodeAsync(DeserializationMessage message) async {
  // Remove all spaces. Necessary for regular expressions as well.
  final targetType = message.targetType.replaceAll(' ', '');

  // If the expected target type is String, nothing to do...
  return targetType == 'String'
    ? message.json
    : json.decode(message.json);
}

/// Primarily intended for use in an isolate.
Future<dynamic> deserializeAsync(DeserializationMessage message) async {
  // Remove all spaces. Necessary for regular expressions as well.
  final targetType = message.targetType.replaceAll(' ', '');

  // If the expected target type is String, nothing to do...
  return targetType == 'String'
    ? message.json
    : ApiClient.fromJson(
        json.decode(message.json),
        targetType,
        growable: message.growable,
      );
}

/// Primarily intended for use in an isolate.
Future<String> serializeAsync(Object? value) async => value == null ? '' : json.encode(value);
