//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//
// @dart=2.12

// ignore_for_file: unused_element, unused_import
// ignore_for_file: always_put_required_named_parameters_first
// ignore_for_file: constant_identifier_names
// ignore_for_file: lines_longer_than_80_chars

import 'package:square_dart_sdk/api.dart';
import 'package:test/test.dart';

// tests for TerminalCheckout
void main() {
  // final instance = TerminalCheckout();

  group('test TerminalCheckout', () {
    // A unique ID for this `TerminalCheckout`.
    // String id
    test('to test the property `id`', () async {
      // TODO
    });

    // Money amountMoney
    test('to test the property `amountMoney`', () async {
      // TODO
    });

    // An optional user-defined reference ID that can be used to associate this `TerminalCheckout` to another entity in an external system. For example, an order ID generated by a third-party shopping cart. The ID is also associated with any payments used to complete the checkout.
    // String referenceId
    test('to test the property `referenceId`', () async {
      // TODO
    });

    // An optional note to associate with the checkout, as well as with any payments used to complete the checkout. Note: maximum 500 characters
    // String note
    test('to test the property `note`', () async {
      // TODO
    });

    // The reference to the Square order ID for the checkout request. Supported only in the US.
    // String orderId
    test('to test the property `orderId`', () async {
      // TODO
    });

    // PaymentOptions paymentOptions
    test('to test the property `paymentOptions`', () async {
      // TODO
    });

    // DeviceCheckoutOptions deviceOptions
    test('to test the property `deviceOptions`', () async {
      // TODO
    });

    // An RFC 3339 duration, after which the checkout is automatically canceled. A `TerminalCheckout` that is `PENDING` is automatically `CANCELED` and has a cancellation reason of `TIMED_OUT`.  Default: 5 minutes from creation  Maximum: 5 minutes
    // String deadlineDuration
    test('to test the property `deadlineDuration`', () async {
      // TODO
    });

    // The status of the `TerminalCheckout`. Options: `PENDING`, `IN_PROGRESS`, `CANCEL_REQUESTED`, `CANCELED`, `COMPLETED`
    // String status
    test('to test the property `status`', () async {
      // TODO
    });

    // The reason why `TerminalCheckout` is canceled. Present if the status is `CANCELED`.
    // String cancelReason
    test('to test the property `cancelReason`', () async {
      // TODO
    });

    // A list of IDs for payments created by this `TerminalCheckout`.
    // List<String> paymentIds (default value: const [])
    test('to test the property `paymentIds`', () async {
      // TODO
    });

    // The time when the `TerminalCheckout` was created, as an RFC 3339 timestamp.
    // String createdAt
    test('to test the property `createdAt`', () async {
      // TODO
    });

    // The time when the `TerminalCheckout` was last updated, as an RFC 3339 timestamp.
    // String updatedAt
    test('to test the property `updatedAt`', () async {
      // TODO
    });

    // The ID of the application that created the checkout.
    // String appId
    test('to test the property `appId`', () async {
      // TODO
    });

    // The location of the device where the `TerminalCheckout` was directed.
    // String locationId
    test('to test the property `locationId`', () async {
      // TODO
    });

    // The type of payment the terminal should attempt to capture from. Defaults to `CARD_PRESENT`.
    // String paymentType
    test('to test the property `paymentType`', () async {
      // TODO
    });

    // An optional ID of the team member associated with creating the checkout.
    // String teamMemberId
    test('to test the property `teamMemberId`', () async {
      // TODO
    });

    // An optional ID of the customer associated with the checkout.
    // String customerId
    test('to test the property `customerId`', () async {
      // TODO
    });

    // Money appFeeMoney
    test('to test the property `appFeeMoney`', () async {
      // TODO
    });

    // Optional additional payment information to include on the customer's card statement as part of the statement description. This can be, for example, an invoice number, ticket number, or short description that uniquely identifies the purchase. Supported only in the US.
    // String statementDescriptionIdentifier
    test('to test the property `statementDescriptionIdentifier`', () async {
      // TODO
    });

    // Money tipMoney
    test('to test the property `tipMoney`', () async {
      // TODO
    });
  });
}
