//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//
// @dart=2.12

// ignore_for_file: unused_element, unused_import
// ignore_for_file: always_put_required_named_parameters_first
// ignore_for_file: constant_identifier_names
// ignore_for_file: lines_longer_than_80_chars

import 'package:square_dart_sdk/api.dart';
import 'package:test/test.dart';

// tests for PaymentRefund
void main() {
  // final instance = PaymentRefund();

  group('test PaymentRefund', () {
    // The unique ID for this refund, generated by Square.
    // String id
    test('to test the property `id`', () async {
      // TODO
    });

    // The refund's status: - `PENDING` - Awaiting approval. - `COMPLETED` - Successfully completed. - `REJECTED` - The refund was rejected. - `FAILED` - An error occurred.
    // String status
    test('to test the property `status`', () async {
      // TODO
    });

    // The location ID associated with the payment this refund is attached to.
    // String locationId
    test('to test the property `locationId`', () async {
      // TODO
    });

    // Flag indicating whether or not the refund is linked to an existing payment in Square.
    // bool unlinked
    test('to test the property `unlinked`', () async {
      // TODO
    });

    // The destination type for this refund.  Current values include `CARD`, `BANK_ACCOUNT`, `WALLET`, `BUY_NOW_PAY_LATER`, `CASH`, and `EXTERNAL`.
    // String destinationType
    test('to test the property `destinationType`', () async {
      // TODO
    });

    // DestinationDetails destinationDetails
    test('to test the property `destinationDetails`', () async {
      // TODO
    });

    // Money amountMoney
    test('to test the property `amountMoney`', () async {
      // TODO
    });

    // Money appFeeMoney
    test('to test the property `appFeeMoney`', () async {
      // TODO
    });

    // Processing fees and fee adjustments assessed by Square for this refund.
    // List<ProcessingFee> processingFee (default value: const [])
    test('to test the property `processingFee`', () async {
      // TODO
    });

    // The ID of the payment associated with this refund.
    // String paymentId
    test('to test the property `paymentId`', () async {
      // TODO
    });

    // The ID of the order associated with the refund.
    // String orderId
    test('to test the property `orderId`', () async {
      // TODO
    });

    // The reason for the refund.
    // String reason
    test('to test the property `reason`', () async {
      // TODO
    });

    // The timestamp of when the refund was created, in RFC 3339 format.
    // String createdAt
    test('to test the property `createdAt`', () async {
      // TODO
    });

    // The timestamp of when the refund was last updated, in RFC 3339 format.
    // String updatedAt
    test('to test the property `updatedAt`', () async {
      // TODO
    });

    // An optional ID of the team member associated with taking the payment.
    // String teamMemberId
    test('to test the property `teamMemberId`', () async {
      // TODO
    });
  });
}
