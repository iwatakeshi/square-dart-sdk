//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//
// @dart=2.12

// ignore_for_file: unused_element, unused_import
// ignore_for_file: always_put_required_named_parameters_first
// ignore_for_file: constant_identifier_names
// ignore_for_file: lines_longer_than_80_chars

import 'package:square_dart_sdk/api.dart';
import 'package:test/test.dart';

// tests for Card
void main() {
  // final instance = Card();

  group('test Card', () {
    // Unique ID for this card. Generated by Square.
    // String id
    test('to test the property `id`', () async {
      // TODO
    });

    // The card's brand.
    // String cardBrand
    test('to test the property `cardBrand`', () async {
      // TODO
    });

    // The last 4 digits of the card number.
    // String last4
    test('to test the property `last4`', () async {
      // TODO
    });

    // The expiration month of the associated card as an integer between 1 and 12.
    // int expMonth
    test('to test the property `expMonth`', () async {
      // TODO
    });

    // The four-digit year of the card's expiration date.
    // int expYear
    test('to test the property `expYear`', () async {
      // TODO
    });

    // The name of the cardholder.
    // String cardholderName
    test('to test the property `cardholderName`', () async {
      // TODO
    });

    // Address billingAddress
    test('to test the property `billingAddress`', () async {
      // TODO
    });

    // Intended as a Square-assigned identifier, based on the card number, to identify the card across multiple locations within a single application.
    // String fingerprint
    test('to test the property `fingerprint`', () async {
      // TODO
    });

    // **Required** The ID of a customer created using the Customers API to be associated with the card.
    // String customerId
    test('to test the property `customerId`', () async {
      // TODO
    });

    // The ID of the merchant associated with the card.
    // String merchantId
    test('to test the property `merchantId`', () async {
      // TODO
    });

    // An optional user-defined reference ID that associates this card with another entity in an external system. For example, a customer ID from an external customer management system.
    // String referenceId
    test('to test the property `referenceId`', () async {
      // TODO
    });

    // Indicates whether or not a card can be used for payments.
    // bool enabled
    test('to test the property `enabled`', () async {
      // TODO
    });

    // The type of the card. The Card object includes this field only in response to Payments API calls.
    // String cardType
    test('to test the property `cardType`', () async {
      // TODO
    });

    // Indicates whether the Card is prepaid or not. The Card object includes this field only in response to Payments API calls.
    // String prepaidType
    test('to test the property `prepaidType`', () async {
      // TODO
    });

    // The first six digits of the card number, known as the Bank Identification Number (BIN). Only the Payments API returns this field.
    // String bin
    test('to test the property `bin`', () async {
      // TODO
    });

    // Current version number of the card. Increments with each card update. Requests to update an existing Card object will be rejected unless the version in the request matches the current version for the Card.
    // int version
    test('to test the property `version`', () async {
      // TODO
    });

    // The card's co-brand if available. For example, an Afterpay virtual card would have a co-brand of AFTERPAY.
    // String cardCoBrand
    test('to test the property `cardCoBrand`', () async {
      // TODO
    });
  });
}
