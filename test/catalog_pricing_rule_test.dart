//
// AUTO-GENERATED FILE, DO NOT MODIFY!
//
// @dart=2.12

// ignore_for_file: unused_element, unused_import
// ignore_for_file: always_put_required_named_parameters_first
// ignore_for_file: constant_identifier_names
// ignore_for_file: lines_longer_than_80_chars

import 'package:square_dart_sdk/api.dart';
import 'package:test/test.dart';

// tests for CatalogPricingRule
void main() {
  // final instance = CatalogPricingRule();

  group('test CatalogPricingRule', () {
    // User-defined name for the pricing rule. For example, \"Buy one get one free\" or \"10% off\".
    // String name
    test('to test the property `name`', () async {
      // TODO
    });

    // A list of unique IDs for the catalog time periods when this pricing rule is in effect. If left unset, the pricing rule is always in effect.
    // List<String> timePeriodIds (default value: const [])
    test('to test the property `timePeriodIds`', () async {
      // TODO
    });

    // Unique ID for the `CatalogDiscount` to take off the price of all matched items.
    // String discountId
    test('to test the property `discountId`', () async {
      // TODO
    });

    // Unique ID for the `CatalogProductSet` that will be matched by this rule. A match rule matches within the entire cart, and can match multiple times. This field will always be set.
    // String matchProductsId
    test('to test the property `matchProductsId`', () async {
      // TODO
    });

    // __Deprecated__: Please use the `exclude_products_id` field to apply an exclude set instead. Exclude sets allow better control over quantity ranges and offer more flexibility for which matched items receive a discount.  `CatalogProductSet` to apply the pricing to. An apply rule matches within the subset of the cart that fits the match rules (the match set). An apply rule can only match once in the match set. If not supplied, the pricing will be applied to all products in the match set. Other products retain their base price, or a price generated by other rules.
    // String applyProductsId
    test('to test the property `applyProductsId`', () async {
      // TODO
    });

    // `CatalogProductSet` to exclude from the pricing rule. An exclude rule matches within the subset of the cart that fits the match rules (the match set). An exclude rule can only match once in the match set. If not supplied, the pricing will be applied to all products in the match set. Other products retain their base price, or a price generated by other rules.
    // String excludeProductsId
    test('to test the property `excludeProductsId`', () async {
      // TODO
    });

    // Represents the date the Pricing Rule is valid from. Represented in RFC 3339 full-date format (YYYY-MM-DD).
    // String validFromDate
    test('to test the property `validFromDate`', () async {
      // TODO
    });

    // Represents the local time the pricing rule should be valid from. Represented in RFC 3339 partial-time format (HH:MM:SS). Partial seconds will be truncated.
    // String validFromLocalTime
    test('to test the property `validFromLocalTime`', () async {
      // TODO
    });

    // Represents the date the Pricing Rule is valid until. Represented in RFC 3339 full-date format (YYYY-MM-DD).
    // String validUntilDate
    test('to test the property `validUntilDate`', () async {
      // TODO
    });

    // Represents the local time the pricing rule should be valid until. Represented in RFC 3339 partial-time format (HH:MM:SS). Partial seconds will be truncated.
    // String validUntilLocalTime
    test('to test the property `validUntilLocalTime`', () async {
      // TODO
    });

    // If an `exclude_products_id` was given, controls which subset of matched products is excluded from any discounts.  Default value: `LEAST_EXPENSIVE`
    // String excludeStrategy
    test('to test the property `excludeStrategy`', () async {
      // TODO
    });

    // Money minimumOrderSubtotalMoney
    test('to test the property `minimumOrderSubtotalMoney`', () async {
      // TODO
    });

    // A list of IDs of customer groups, the members of which are eligible for discounts specified in this pricing rule. Notice that a group ID is generated by the Customers API. If this field is not set, the specified discount applies to matched products sold to anyone whether the buyer has a customer profile created or not. If this `customer_group_ids_any` field is set, the specified discount applies only to matched products sold to customers belonging to the specified customer groups.
    // List<String> customerGroupIdsAny (default value: const [])
    test('to test the property `customerGroupIdsAny`', () async {
      // TODO
    });
  });
}
